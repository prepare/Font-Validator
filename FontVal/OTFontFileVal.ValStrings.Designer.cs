//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DevMain2 {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class OTFontFileVal_ValStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal OTFontFileVal_ValStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DevMain2.OTFontFileVal.ValStrings", typeof(OTFontFileVal_ValStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0030: Directory Entry checksum error.
        /// </summary>
        internal static string _DE_E_ChecksumError {
            get {
                return ResourceManager.GetString("_DE_E_ChecksumError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0031: Directory Entry contains a duplicate tag.
        /// </summary>
        internal static string _DE_E_DuplicateTag {
            get {
                return ResourceManager.GetString("_DE_E_DuplicateTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0032: Directory Entry length is 0.
        /// </summary>
        internal static string _DE_E_LengthZero {
            get {
                return ResourceManager.GetString("_DE_E_LengthZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0033: Directory Entry offset points past EOF.
        /// </summary>
        internal static string _DE_E_OffsetPastEOF {
            get {
                return ResourceManager.GetString("_DE_E_OffsetPastEOF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0034: Directory Entry offset is 0.
        /// </summary>
        internal static string _DE_E_OffsetZero {
            get {
                return ResourceManager.GetString("_DE_E_OffsetZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0035: Directory Entry overlaps another table.
        /// </summary>
        internal static string _DE_E_OverlappingTable {
            get {
                return ResourceManager.GetString("_DE_E_OverlappingTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0036: Directory Entry offset plus length past EOF.
        /// </summary>
        internal static string _DE_E_TableEndPastEOF {
            get {
                return ResourceManager.GetString("_DE_E_TableEndPastEOF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0037: The directory entry tag name is invalid.
        /// </summary>
        internal static string _DE_E_TagName {
            get {
                return ResourceManager.GetString("_DE_E_TagName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0038: The directory entry tags are not in ascending order.
        /// </summary>
        internal static string _DE_E_TagsAscending {
            get {
                return ResourceManager.GetString("_DE_E_TagsAscending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0039: Directory Entry tag is 0.
        /// </summary>
        internal static string _DE_E_TagZero {
            get {
                return ResourceManager.GetString("_DE_E_TagZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0030: The directory entry table offsets are all multiples of 4.
        /// </summary>
        internal static string _DE_P_TableAlignment {
            get {
                return ResourceManager.GetString("_DE_P_TableAlignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0031: The directory entry tag names are valid.
        /// </summary>
        internal static string _DE_P_TagName {
            get {
                return ResourceManager.GetString("_DE_P_TagName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0032: The directory entry tags are in ascending order.
        /// </summary>
        internal static string _DE_P_TagsAscending {
            get {
                return ResourceManager.GetString("_DE_P_TagsAscending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W0031: Non-zero pad bytes were found for the table.
        /// </summary>
        internal static string _DE_W_PadBytesNotZero {
            get {
                return ResourceManager.GetString("_DE_W_PadBytesNotZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W0030: The directory entry table offset is not a multiple of 4.
        /// </summary>
        internal static string _DE_W_TableAlignment {
            get {
                return ResourceManager.GetString("_DE_W_TableAlignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0020: Required table is missing.
        /// </summary>
        internal static string _FONT_E_MissingRequiredTable {
            get {
                return ResourceManager.GetString("_FONT_E_MissingRequiredTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0023: All recommended tables are present.
        /// </summary>
        internal static string _FONT_P_MissingRecommendedTable {
            get {
                return ResourceManager.GetString("_FONT_P_MissingRecommendedTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0020: All required tables are present.
        /// </summary>
        internal static string _FONT_P_MissingRequiredTable {
            get {
                return ResourceManager.GetString("_FONT_P_MissingRequiredTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0021: Tables are in optimal order.
        /// </summary>
        internal static string _FONT_P_OptimalOrder {
            get {
                return ResourceManager.GetString("_FONT_P_OptimalOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0022: No unnecessary tables are present.
        /// </summary>
        internal static string _FONT_P_UnnecessaryTable {
            get {
                return ResourceManager.GetString("_FONT_P_UnnecessaryTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W0023: Unusual characters in FontName.
        /// </summary>
        internal static string _FONT_W_FONTNAME_CHARS {
            get {
                return ResourceManager.GetString("_FONT_W_FONTNAME_CHARS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W0024: Unusual characters in FontVersion.
        /// </summary>
        internal static string _FONT_W_FONTVERSION_CHARS {
            get {
                return ResourceManager.GetString("_FONT_W_FONTVERSION_CHARS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W0022: Recommended table is missing.
        /// </summary>
        internal static string _FONT_W_MissingRecommendedTable {
            get {
                return ResourceManager.GetString("_FONT_W_MissingRecommendedTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W0020: Tables are not in optimal order.
        /// </summary>
        internal static string _FONT_W_OptimalOrder {
            get {
                return ResourceManager.GetString("_FONT_W_OptimalOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W0021: Table is unnecessary.
        /// </summary>
        internal static string _FONT_W_UnnecessaryTable {
            get {
                return ResourceManager.GetString("_FONT_W_UnnecessaryTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0001: Unexpected End of File.
        /// </summary>
        internal static string _GEN_E_EOFError {
            get {
                return ResourceManager.GetString("_GEN_E_EOFError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0003: The file was not recognized as a valid OpenType font file.
        /// </summary>
        internal static string _GEN_E_InvalidFontFile {
            get {
                return ResourceManager.GetString("_GEN_E_InvalidFontFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0004: Read error: offset exceeds length of the table.
        /// </summary>
        internal static string _GEN_E_OffsetExceedsTableLength {
            get {
                return ResourceManager.GetString("_GEN_E_OffsetExceedsTableLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0005: Error reading file.
        /// </summary>
        internal static string _GEN_E_ReadError {
            get {
                return ResourceManager.GetString("_GEN_E_ReadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0006: Font Validation was canceled by the user.
        /// </summary>
        internal static string _GEN_E_UserCanceled {
            get {
                return ResourceManager.GetString("_GEN_E_UserCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I0001: The file begins with a TTC header (file contains a collection of fonts).
        /// </summary>
        internal static string _GEN_I_Collection {
            get {
                return ResourceManager.GetString("_GEN_I_Collection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I0002: Opening File.
        /// </summary>
        internal static string _GEN_I_OpeningFile {
            get {
                return ResourceManager.GetString("_GEN_I_OpeningFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I0004: The file begins with an Offset Table (file contains a single font).
        /// </summary>
        internal static string _GEN_I_Single {
            get {
                return ResourceManager.GetString("_GEN_I_Single", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I0005: Total time validating file.
        /// </summary>
        internal static string _GEN_I_TotalValTime {
            get {
                return ResourceManager.GetString("_GEN_I_TotalValTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0010: The entrySelector field is invalid.
        /// </summary>
        internal static string _OFFSET_E_entrySelector {
            get {
                return ResourceManager.GetString("_OFFSET_E_entrySelector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0011: The sfnt field is invalid.
        /// </summary>
        internal static string _OFFSET_E_InvalidSFNT {
            get {
                return ResourceManager.GetString("_OFFSET_E_InvalidSFNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0012: The numTables field is zero.
        /// </summary>
        internal static string _OFFSET_E_numTables {
            get {
                return ResourceManager.GetString("_OFFSET_E_numTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0013: The rangeShift field is invalid.
        /// </summary>
        internal static string _OFFSET_E_rangeShift {
            get {
                return ResourceManager.GetString("_OFFSET_E_rangeShift", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0014: The searchRange field is invalid.
        /// </summary>
        internal static string _OFFSET_E_searchRange {
            get {
                return ResourceManager.GetString("_OFFSET_E_searchRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0010: The searchRange, entrySelector, and rangeShift fields are all valid.
        /// </summary>
        internal static string _OFFSET_P_BinarySearchTables {
            get {
                return ResourceManager.GetString("_OFFSET_P_BinarySearchTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0011: The numTables field is non-zero.
        /// </summary>
        internal static string _OFFSET_P_numTables {
            get {
                return ResourceManager.GetString("_OFFSET_P_numTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5000: The Format field is invalid.
        /// </summary>
        internal static string _OTL_ClassDefinitionTable_E_Format {
            get {
                return ResourceManager.GetString("_OTL_ClassDefinitionTable_E_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5001: The GlyphArray extends past the end of the table.
        /// </summary>
        internal static string _OTL_ClassDefinitionTable_E_GlyphArrayPastEOT {
            get {
                return ResourceManager.GetString("_OTL_ClassDefinitionTable_E_GlyphArrayPastEOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5002: The RangeRecord array is not in sorted order.
        /// </summary>
        internal static string _OTL_ClassDefinitionTable_E_RangeRecordArray_order {
            get {
                return ResourceManager.GetString("_OTL_ClassDefinitionTable_E_RangeRecordArray_order", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5003: The RangeRecord array extends past the end of the table.
        /// </summary>
        internal static string _OTL_ClassDefinitionTable_E_RangeRecordArrayPastEOT {
            get {
                return ResourceManager.GetString("_OTL_ClassDefinitionTable_E_RangeRecordArrayPastEOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P5000: The Class Definition Table is valid.
        /// </summary>
        internal static string _OTL_ClassDefinitionTable_P_valid {
            get {
                return ResourceManager.GetString("_OTL_ClassDefinitionTable_P_valid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5100: The Format field is invalid.
        /// </summary>
        internal static string _OTL_CoverageTable_E_Format {
            get {
                return ResourceManager.GetString("_OTL_CoverageTable_E_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5101: The GlyphArray extends past the end of the table.
        /// </summary>
        internal static string _OTL_CoverageTable_E_GlyphArrayPastEOT {
            get {
                return ResourceManager.GetString("_OTL_CoverageTable_E_GlyphArrayPastEOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5102: The RangeRecord array extends past the end of the table.
        /// </summary>
        internal static string _OTL_CoverageTable_E_RangeRecordArrayPastEOT {
            get {
                return ResourceManager.GetString("_OTL_CoverageTable_E_RangeRecordArrayPastEOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P5100: The Coverage Table is valid.
        /// </summary>
        internal static string _OTL_CoverageTable_P_valid {
            get {
                return ResourceManager.GetString("_OTL_CoverageTable_P_valid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5200: The device table&apos;s DeltaFormat value is invalid.
        /// </summary>
        internal static string _OTL_DeviceTable_E_DeltaFormat {
            get {
                return ResourceManager.GetString("_OTL_DeviceTable_E_DeltaFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5201: The device table&apos;s DeltaValue array extends past the end of the table.
        /// </summary>
        internal static string _OTL_DeviceTable_E_DeltaValueArray_pastEOT {
            get {
                return ResourceManager.GetString("_OTL_DeviceTable_E_DeltaValueArray_pastEOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5202: The device table StartSize is greater than the end size.
        /// </summary>
        internal static string _OTL_DeviceTable_E_sizes {
            get {
                return ResourceManager.GetString("_OTL_DeviceTable_E_sizes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P5200: The device table is valid.
        /// </summary>
        internal static string _OTL_DeviceTable_P_valid {
            get {
                return ResourceManager.GetString("_OTL_DeviceTable_P_valid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W5200: The device table EndSize is unusually large.
        /// </summary>
        internal static string _OTL_DeviceTable_W_EndSize {
            get {
                return ResourceManager.GetString("_OTL_DeviceTable_W_EndSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W5021: The device table StartSize is unusually large.
        /// </summary>
        internal static string _OTL_DeviceTable_W_StartSize {
            get {
                return ResourceManager.GetString("_OTL_DeviceTable_W_StartSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5300: The FeatureRecord Feature table offset points past the end of the table.
        /// </summary>
        internal static string _OTL_FeatureListTable_E_FeatureRecord_offset {
            get {
                return ResourceManager.GetString("_OTL_FeatureListTable_E_FeatureRecord_offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5301: The FeatureRecord tag is invalid.
        /// </summary>
        internal static string _OTL_FeatureListTable_E_FeatureRecord_tag {
            get {
                return ResourceManager.GetString("_OTL_FeatureListTable_E_FeatureRecord_tag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5302: The FeatureRecord array is not in alphabetical order.
        /// </summary>
        internal static string _OTL_FeatureListTable_E_FeatureRecordArray_order {
            get {
                return ResourceManager.GetString("_OTL_FeatureListTable_E_FeatureRecordArray_order", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5303: The FeatureRecord array extends past the end of the table.
        /// </summary>
        internal static string _OTL_FeatureListTable_E_FeatureRecordArray_pastEOT {
            get {
                return ResourceManager.GetString("_OTL_FeatureListTable_E_FeatureRecordArray_pastEOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P5300: The FeatureList table is valid.
        /// </summary>
        internal static string _OTL_FeatureListTable_P_valid {
            get {
                return ResourceManager.GetString("_OTL_FeatureListTable_P_valid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W5300: The FeatureRecord tag is valid, but unregistered.
        /// </summary>
        internal static string _OTL_FeatureListTable_W_FeatureRecord_tag {
            get {
                return ResourceManager.GetString("_OTL_FeatureListTable_W_FeatureRecord_tag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5400: The FeatureParams field is not null.
        /// </summary>
        internal static string _OTL_FeatureTable_E_FeatureParams_nonnull {
            get {
                return ResourceManager.GetString("_OTL_FeatureTable_E_FeatureParams_nonnull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5401: The LookupListIndexArray extends past the end of the table.
        /// </summary>
        internal static string _OTL_FeatureTable_E_LookupListIndexArray_pastEOT {
            get {
                return ResourceManager.GetString("_OTL_FeatureTable_E_LookupListIndexArray_pastEOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P5400: The Feature table is valid.
        /// </summary>
        internal static string _OTL_FeatureTable_P_valid {
            get {
                return ResourceManager.GetString("_OTL_FeatureTable_P_valid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5500: The FeatureIndex array extends past the end of the table.
        /// </summary>
        internal static string _OTL_LangSysTable_E_FeatureIndexArray_pastEOT {
            get {
                return ResourceManager.GetString("_OTL_LangSysTable_E_FeatureIndexArray_pastEOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5501: The LookupOrder offset is not null.
        /// </summary>
        internal static string _OTL_LangSysTable_E_LookupOrder {
            get {
                return ResourceManager.GetString("_OTL_LangSysTable_E_LookupOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P5500: The LangSysTable is valid.
        /// </summary>
        internal static string _OTL_LangSysTable_P_valid {
            get {
                return ResourceManager.GetString("_OTL_LangSysTable_P_valid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5600: The Lookup table offset points past the end of the table.
        /// </summary>
        internal static string _OTL_LookupListTable_E_Lookup_offset {
            get {
                return ResourceManager.GetString("_OTL_LookupListTable_E_Lookup_offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5601: The Lookup array extends past the end of the table.
        /// </summary>
        internal static string _OTL_LookupListTable_E_LookupArray_pastEOT {
            get {
                return ResourceManager.GetString("_OTL_LookupListTable_E_LookupArray_pastEOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P5600: The LookupList table is valid.
        /// </summary>
        internal static string _OTL_LookupListTable_P_valid {
            get {
                return ResourceManager.GetString("_OTL_LookupListTable_P_valid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5700: The LookupFlag reserved bits are not all set to zero.
        /// </summary>
        internal static string _OTL_LookupTable_E_LookupFlag_reserved {
            get {
                return ResourceManager.GetString("_OTL_LookupTable_E_LookupFlag_reserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5701: The LookupType value is invalid.
        /// </summary>
        internal static string _OTL_LookupTable_E_LookupType {
            get {
                return ResourceManager.GetString("_OTL_LookupTable_E_LookupType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5702: The Subtable array offset value points past the end of the table.
        /// </summary>
        internal static string _OTL_LookupTable_E_SubtableArray_offset {
            get {
                return ResourceManager.GetString("_OTL_LookupTable_E_SubtableArray_offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5703: The Subtable offset array extends past the end of the table.
        /// </summary>
        internal static string _OTL_LookupTable_E_SubtableArray_pastEOT {
            get {
                return ResourceManager.GetString("_OTL_LookupTable_E_SubtableArray_pastEOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P5700: The Lookup table is valid.
        /// </summary>
        internal static string _OTL_LookupTable_P_valid {
            get {
                return ResourceManager.GetString("_OTL_LookupTable_P_valid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5800: The ScriptRecord offset to ScriptTable points past the end of the table.
        /// </summary>
        internal static string _OTL_ScriptListTable_E_ScriptRecord_offset {
            get {
                return ResourceManager.GetString("_OTL_ScriptListTable_E_ScriptRecord_offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5801: The ScriptRecord tag is invalid.
        /// </summary>
        internal static string _OTL_ScriptListTable_E_ScriptRecord_tag {
            get {
                return ResourceManager.GetString("_OTL_ScriptListTable_E_ScriptRecord_tag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5802: The ScriptRecord array is not in alphabetical order.
        /// </summary>
        internal static string _OTL_ScriptListTable_E_ScriptRecordArray_order {
            get {
                return ResourceManager.GetString("_OTL_ScriptListTable_E_ScriptRecordArray_order", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5803: The ScriptRecord array extends past the end of the table.
        /// </summary>
        internal static string _OTL_ScriptListTable_E_ScriptRecordArray_pastEOT {
            get {
                return ResourceManager.GetString("_OTL_ScriptListTable_E_ScriptRecordArray_pastEOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P5800: The ScriptList Table is valid.
        /// </summary>
        internal static string _OTL_ScriptListTable_P_valid {
            get {
                return ResourceManager.GetString("_OTL_ScriptListTable_P_valid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5900: The DefaultLangSys offset points past the end of the table.
        /// </summary>
        internal static string _OTL_ScriptTable_E_DefaultLangSysOffset {
            get {
                return ResourceManager.GetString("_OTL_ScriptTable_E_DefaultLangSysOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5901: The LangSysRecord&apos;s LangSys offset points past the end of the table.
        /// </summary>
        internal static string _OTL_ScriptTable_E_LangSysRecord_offset {
            get {
                return ResourceManager.GetString("_OTL_ScriptTable_E_LangSysRecord_offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5902: The LangSysRecord tag is not valid.
        /// </summary>
        internal static string _OTL_ScriptTable_E_LangSysRecord_tag {
            get {
                return ResourceManager.GetString("_OTL_ScriptTable_E_LangSysRecord_tag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5903: The LangSysRecord array is not in alphabetical order.
        /// </summary>
        internal static string _OTL_ScriptTable_E_LangSysRecordArray_order {
            get {
                return ResourceManager.GetString("_OTL_ScriptTable_E_LangSysRecordArray_order", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E5904: The LangSysRecord array extends past the end of the table.
        /// </summary>
        internal static string _OTL_ScriptTable_E_LangSysRecordArray_pastEOT {
            get {
                return ResourceManager.GetString("_OTL_ScriptTable_E_LangSysRecordArray_pastEOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P5900: The Script Table is valid.
        /// </summary>
        internal static string _OTL_ScriptTable_P_valid {
            get {
                return ResourceManager.GetString("_OTL_ScriptTable_P_valid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A6000: An exception occurred during rasterization testing.
        /// </summary>
        internal static string _rast_A_ExceptionUnhandled {
            get {
                return ResourceManager.GetString("_rast_A_ExceptionUnhandled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6000: Reserved value of 3 used for period.
        /// </summary>
        internal static string _rast_E_3_USED_FOR_PERIOD {
            get {
                return ResourceManager.GetString("_rast_E_3_USED_FOR_PERIOD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6001: Bits 10 and 13 are set, they are mutually exclusive.
        /// </summary>
        internal static string _rast_E_BITS_10_AND_13_SET {
            get {
                return ResourceManager.GetString("_rast_E_BITS_10_AND_13_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6002: Bits 8 and 11 are set, they are mutually exclusive.
        /// </summary>
        internal static string _rast_E_BITS_8_AND_11_SET {
            get {
                return ResourceManager.GetString("_rast_E_BITS_8_AND_11_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6003: Bits 9 and 12 are set, they are mutually exclusive.
        /// </summary>
        internal static string _rast_E_BITS_9_AND_12_SET {
            get {
                return ResourceManager.GetString("_rast_E_BITS_9_AND_12_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6004: Contour out of range.
        /// </summary>
        internal static string _rast_E_CONTOUR_OUT_OF_RANGE {
            get {
                return ResourceManager.GetString("_rast_E_CONTOUR_OUT_OF_RANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6005: CVT Out of range.
        /// </summary>
        internal static string _rast_E_CVT_OUT_OF_RANGE {
            get {
                return ResourceManager.GetString("_rast_E_CVT_OUT_OF_RANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6006: Divide by zero.
        /// </summary>
        internal static string _rast_E_DIVIDE_BY_ZERO {
            get {
                return ResourceManager.GetString("_rast_E_DIVIDE_BY_ZERO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6007: EIF found without IF.
        /// </summary>
        internal static string _rast_E_EIF_WITHOUT_IF {
            get {
                return ResourceManager.GetString("_rast_E_EIF_WITHOUT_IF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6008: ELSE found without EIF.
        /// </summary>
        internal static string _rast_E_ELSE_WITHOUT_EIF {
            get {
                return ResourceManager.GetString("_rast_E_ELSE_WITHOUT_EIF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6009: ELSE found without IF.
        /// </summary>
        internal static string _rast_E_ELSE_WITHOUT_IF {
            get {
                return ResourceManager.GetString("_rast_E_ELSE_WITHOUT_IF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6010: ENDF beyond 64K of FDEF.
        /// </summary>
        internal static string _rast_E_ENDF_BEYOND_64K_OF_FDEF {
            get {
                return ResourceManager.GetString("_rast_E_ENDF_BEYOND_64K_OF_FDEF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6011: ENDF beyond 64K of IDEF.
        /// </summary>
        internal static string _rast_E_ENDF_BEYOND_64K_OF_IDEF {
            get {
                return ResourceManager.GetString("_rast_E_ENDF_BEYOND_64K_OF_IDEF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6012: ENDF found without FDEF or IDEF.
        /// </summary>
        internal static string _rast_E_ENDF_EXECUTED {
            get {
                return ResourceManager.GetString("_rast_E_ENDF_EXECUTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6013: IDEF exceeds max instruction defs in maxp.
        /// </summary>
        internal static string _rast_E_EXCEEDS_INSTR_DEFS_IN_MAXP {
            get {
                return ResourceManager.GetString("_rast_E_EXCEEDS_INSTR_DEFS_IN_MAXP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6014: FDEF found within FDEF - ENDF pair.
        /// </summary>
        internal static string _rast_E_FDEF_FOUND_IN_FDEF {
            get {
                return ResourceManager.GetString("_rast_E_FDEF_FOUND_IN_FDEF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6015: FDEF found within IDEF - ENDF pair.
        /// </summary>
        internal static string _rast_E_FDEF_FOUND_IN_IDEF {
            get {
                return ResourceManager.GetString("_rast_E_FDEF_FOUND_IN_IDEF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6016: FDEF out of range.
        /// </summary>
        internal static string _rast_E_FDEF_OUT_OF_RANGE {
            get {
                return ResourceManager.GetString("_rast_E_FDEF_OUT_OF_RANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6017: Function definition space not defined.
        /// </summary>
        internal static string _rast_E_FDEF_SPACE_NOT_DEFINED {
            get {
                return ResourceManager.GetString("_rast_E_FDEF_SPACE_NOT_DEFINED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6018: FDEF found without ENDF.
        /// </summary>
        internal static string _rast_E_FDEF_WITHOUT_ENDF {
            get {
                return ResourceManager.GetString("_rast_E_FDEF_WITHOUT_ENDF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6072: FDEF or IDEF should be in fpgm and prep only, not in glyf.
        /// </summary>
        internal static string _rast_E_FT_DEF_IN_GLYF {
            get {
                return ResourceManager.GetString("_rast_E_FT_DEF_IN_GLYF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6070: Execution time too long and exceeds dynamic limit.
        /// </summary>
        internal static string _rast_E_FT_EXECUTION_TOO_LONG {
            get {
                return ResourceManager.GetString("_rast_E_FT_EXECUTION_TOO_LONG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6071: Execution time too long and exceeds dynamic limit in backward jump.
        /// </summary>
        internal static string _rast_E_FT_EXECUTION_TOO_LONG_BACKWARD_JUMP {
            get {
                return ResourceManager.GetString("_rast_E_FT_EXECUTION_TOO_LONG_BACKWARD_JUMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6019: Funit coordinate out of range must be -16384 .. 16383.
        /// </summary>
        internal static string _rast_E_FUCOORDINATE_OUT_OF_RANGE {
            get {
                return ResourceManager.GetString("_rast_E_FUCOORDINATE_OUT_OF_RANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6020: Function not defined.
        /// </summary>
        internal static string _rast_E_FUNCTION_NOT_DEFINED {
            get {
                return ResourceManager.GetString("_rast_E_FUNCTION_NOT_DEFINED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6021: IDEF found within FDEF - ENDF pair.
        /// </summary>
        internal static string _rast_E_IDEF_FOUND_IN_FDEF {
            get {
                return ResourceManager.GetString("_rast_E_IDEF_FOUND_IN_FDEF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6022: IDEF found within IDEF - ENDF pair.
        /// </summary>
        internal static string _rast_E_IDEF_FOUND_IN_IDEF {
            get {
                return ResourceManager.GetString("_rast_E_IDEF_FOUND_IN_IDEF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6023: IDEF found without ENDF.
        /// </summary>
        internal static string _rast_E_IDEF_WITHOUT_ENDF {
            get {
                return ResourceManager.GetString("_rast_E_IDEF_WITHOUT_ENDF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6024: IF found without corresponding EIF.
        /// </summary>
        internal static string _rast_E_IF_WITHOUT_EIF {
            get {
                return ResourceManager.GetString("_rast_E_IF_WITHOUT_EIF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6025: Instruction OpCode is to large. Must be between 0 and 255.
        /// </summary>
        internal static string _rast_E_INST_OPCODE_TO_LARGE {
            get {
                return ResourceManager.GetString("_rast_E_INST_OPCODE_TO_LARGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6026: Instruction already defined by rasterizer.
        /// </summary>
        internal static string _rast_E_INSTR_DEFD_BY_FS {
            get {
                return ResourceManager.GetString("_rast_E_INSTR_DEFD_BY_FS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6027: Invalid Instruction flag.
        /// </summary>
        internal static string _rast_E_INVALID_FLAG {
            get {
                return ResourceManager.GetString("_rast_E_INVALID_FLAG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6028: Invalid Instruction.
        /// </summary>
        internal static string _rast_E_INVALID_INSTRUCTION {
            get {
                return ResourceManager.GetString("_rast_E_INVALID_INSTRUCTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6029: Invalid maxZones in maxp table.
        /// </summary>
        internal static string _rast_E_INVALID_MAXZONES_IN_MAXP {
            get {
                return ResourceManager.GetString("_rast_E_INVALID_MAXZONES_IN_MAXP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6030: Attempt to access stack element out of range.
        /// </summary>
        internal static string _rast_E_INVALID_STACK_ACCESS {
            get {
                return ResourceManager.GetString("_rast_E_INVALID_STACK_ACCESS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6031: Invalid zone.
        /// </summary>
        internal static string _rast_E_INVALID_ZONE {
            get {
                return ResourceManager.GetString("_rast_E_INVALID_ZONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6032: ZP2 in IUP does not point to zone 1.
        /// </summary>
        internal static string _rast_E_INVALID_ZONE_IN_IUP {
            get {
                return ResourceManager.GetString("_rast_E_INVALID_ZONE_IN_IUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6033: No twilight zone defined. Invalid zone.
        /// </summary>
        internal static string _rast_E_INVALID_ZONE_NO_TWI {
            get {
                return ResourceManager.GetString("_rast_E_INVALID_ZONE_NO_TWI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6034: Jump before beginning of program or function.
        /// </summary>
        internal static string _rast_E_JMP_BEFORE_BEGINNING {
            get {
                return ResourceManager.GetString("_rast_E_JMP_BEFORE_BEGINNING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6035: Jump beyond 2 bytes past end of function or program.
        /// </summary>
        internal static string _rast_E_JMP_BEYOND_2MORE_THAN_END {
            get {
                return ResourceManager.GetString("_rast_E_JMP_BEYOND_2MORE_THAN_END", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6036: Math overflow.
        /// </summary>
        internal static string _rast_E_MATH_OVERFLOW {
            get {
                return ResourceManager.GetString("_rast_E_MATH_OVERFLOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6037: Not called from pre-program.
        /// </summary>
        internal static string _rast_E_NOT_CALLED_FROM_PREPROGRAM {
            get {
                return ResourceManager.GetString("_rast_E_NOT_CALLED_FROM_PREPROGRAM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6038: Overflow Instruction Stream.
        /// </summary>
        internal static string _rast_E_OVERFLOW_INST_PTR {
            get {
                return ResourceManager.GetString("_rast_E_OVERFLOW_INST_PTR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6039: Point out of range.
        /// </summary>
        internal static string _rast_E_POINT_OUT_OF_RANGE {
            get {
                return ResourceManager.GetString("_rast_E_POINT_OUT_OF_RANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6040: Zone referenced in pre-program is not the twilight zone.
        /// </summary>
        internal static string _rast_E_PREPROGAM_ZONE_NOT_TWI {
            get {
                return ResourceManager.GetString("_rast_E_PREPROGAM_ZONE_NOT_TWI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6059: Could not perform rasterization.
        /// </summary>
        internal static string _rast_E_rasterization {
            get {
                return ResourceManager.GetString("_rast_E_rasterization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6041: Reference point used but not set.
        /// </summary>
        internal static string _rast_E_REFPOINT_USED_BUT_NOT_SET {
            get {
                return ResourceManager.GetString("_rast_E_REFPOINT_USED_BUT_NOT_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6042: At least one reserved bit is set.
        /// </summary>
        internal static string _rast_E_RESERVED_BIT_SET {
            get {
                return ResourceManager.GetString("_rast_E_RESERVED_BIT_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6043: RP1 and RP2 have the same position on the projection vector.
        /// </summary>
        internal static string _rast_E_RP1_RP2_SAME_POS_ON_PROJ {
            get {
                return ResourceManager.GetString("_rast_E_RP1_RP2_SAME_POS_ON_PROJ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6044: Selector invalid.
        /// </summary>
        internal static string _rast_E_SELECTOR_INVALID {
            get {
                return ResourceManager.GetString("_rast_E_SELECTOR_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6045: Stack Overflow.
        /// </summary>
        internal static string _rast_E_STACK_OVERFLOW {
            get {
                return ResourceManager.GetString("_rast_E_STACK_OVERFLOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6046: Stack Underflow.
        /// </summary>
        internal static string _rast_E_STACK_UNDERFLOW {
            get {
                return ResourceManager.GetString("_rast_E_STACK_UNDERFLOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6047: Storage index out of range.
        /// </summary>
        internal static string _rast_E_STORAGE_OUT_OF_RANGE {
            get {
                return ResourceManager.GetString("_rast_E_STORAGE_OUT_OF_RANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6048: Storage location not written to.
        /// </summary>
        internal static string _rast_E_STORE_INDEX_NOT_WRITTEN_TO {
            get {
                return ResourceManager.GetString("_rast_E_STORE_INDEX_NOT_WRITTEN_TO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6049: Twilight zone point not set.
        /// </summary>
        internal static string _rast_E_TWILIGHT_ZONE_PT_NOT_SET {
            get {
                return ResourceManager.GetString("_rast_E_TWILIGHT_ZONE_PT_NOT_SET", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6050: Value invalid should be 0 or 1.
        /// </summary>
        internal static string _rast_E_VALUE_INVALID_0_OR_1 {
            get {
                return ResourceManager.GetString("_rast_E_VALUE_INVALID_0_OR_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6051: Value invalid should be 0 or 2.
        /// </summary>
        internal static string _rast_E_VALUE_INVALID_0_OR_2 {
            get {
                return ResourceManager.GetString("_rast_E_VALUE_INVALID_0_OR_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6052: Value out of range.
        /// </summary>
        internal static string _rast_E_VALUE_OUT_OF_RANGE {
            get {
                return ResourceManager.GetString("_rast_E_VALUE_OUT_OF_RANGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6053: Value exceeds capacity of 2 byte number.
        /// </summary>
        internal static string _rast_E_VALUE_TO_LARGE_FOR_INT16 {
            get {
                return ResourceManager.GetString("_rast_E_VALUE_TO_LARGE_FOR_INT16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6054: Value exceeds capacity of 1 byte number.
        /// </summary>
        internal static string _rast_E_VALUE_TO_LARGE_FOR_INT8 {
            get {
                return ResourceManager.GetString("_rast_E_VALUE_TO_LARGE_FOR_INT8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6055: Value too small.
        /// </summary>
        internal static string _rast_E_VALUE_TO_SMALL {
            get {
                return ResourceManager.GetString("_rast_E_VALUE_TO_SMALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6056: X and Y components of vector are invalid. X^2 + Y^2 != 0x4000^2.
        /// </summary>
        internal static string _rast_E_VECTOR_XY_INVALID {
            get {
                return ResourceManager.GetString("_rast_E_VECTOR_XY_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6057: X and Y components of vector are 0.
        /// </summary>
        internal static string _rast_E_VECTOR_XY_ZERO {
            get {
                return ResourceManager.GetString("_rast_E_VECTOR_XY_ZERO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E6058: Zone not 0 nor 1.
        /// </summary>
        internal static string _rast_E_ZONE_NOT_0_NOR_1 {
            get {
                return ResourceManager.GetString("_rast_E_ZONE_NOT_0_NOR_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I6070: Supplementary Information.
        /// </summary>
        internal static string _rast_I_FT_Error_Supplymentary_Info {
            get {
                return ResourceManager.GetString("_rast_I_FT_Error_Supplymentary_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I6059: Could not perform rasterization.
        /// </summary>
        internal static string _rast_I_rasterization {
            get {
                return ResourceManager.GetString("_rast_I_rasterization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P6000: No problems were found during rasterization testing.
        /// </summary>
        internal static string _rast_P_rasterization {
            get {
                return ResourceManager.GetString("_rast_P_rasterization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W6000: GETVARIATION, GETDATA (Apple-specific) or IDEFs at opcode 0x91,0x92.
        /// </summary>
        internal static string _rast_W_APPLE_ONLY_INSTR {
            get {
                return ResourceManager.GetString("_rast_W_APPLE_ONLY_INSTR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W6001: CALL to zero length function.
        /// </summary>
        internal static string _rast_W_CALL_ZERO_LEN_FUNC {
            get {
                return ResourceManager.GetString("_rast_W_CALL_ZERO_LEN_FUNC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W6002: Call to zero length user defined instruction.
        /// </summary>
        internal static string _rast_W_CALL_ZERO_LEN_UD_INSTR {
            get {
                return ResourceManager.GetString("_rast_W_CALL_ZERO_LEN_UD_INSTR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W6003: DEBUG found which should not be found in production code.
        /// </summary>
        internal static string _rast_W_DEBUG_FOUND {
            get {
                return ResourceManager.GetString("_rast_W_DEBUG_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W6004: Repeated executions in glyph programs can have unexpected results.
        /// </summary>
        internal static string _rast_W_DELTAC_IN_GLYPH_PGM {
            get {
                return ResourceManager.GetString("_rast_W_DELTAC_IN_GLYPH_PGM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W6030: ALIGNRP after IUP in Subpixel-hinting mode.
        /// </summary>
        internal static string _rast_W_FT_ALIGNRP_AFTER_IUP {
            get {
                return ResourceManager.GetString("_rast_W_FT_ALIGNRP_AFTER_IUP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W6024: Invalid Argument.
        /// </summary>
        internal static string _rast_W_FT_InvalidArgument {
            get {
                return ResourceManager.GetString("_rast_W_FT_InvalidArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W6023: Invalid Outline.
        /// </summary>
        internal static string _rast_W_FT_InvalidOutline {
            get {
                return ResourceManager.GetString("_rast_W_FT_InvalidOutline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W6025: Invalid PixelSize.
        /// </summary>
        internal static string _rast_W_FT_InvalidPixelSize {
            get {
                return ResourceManager.GetString("_rast_W_FT_InvalidPixelSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W6026: Invalid Size Handle.
        /// </summary>
        internal static string _rast_W_FT_InvalidSizeHandle {
            get {
                return ResourceManager.GetString("_rast_W_FT_InvalidSizeHandle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W6028: number of twilight points unreasonably large.
        /// </summary>
        internal static string _rast_W_FT_MAX_NUM_TWILIGHT_POINTS_CLAMP {
            get {
                return ResourceManager.GetString("_rast_W_FT_MAX_NUM_TWILIGHT_POINTS_CLAMP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W6027: maxComponentDepth in maxp is too low.
        /// </summary>
        internal static string _rast_W_FT_MAXP_maxComponentDepth_TOO_LOW {
            get {
                return ResourceManager.GetString("_rast_W_FT_MAXP_maxComponentDepth_TOO_LOW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W6020: Setting the loop variable to negative value.
        /// </summary>
        internal static string _rast_W_FT_VALUE_OUT_OF_RANGE_SLOOP {
            get {
                return ResourceManager.GetString("_rast_W_FT_VALUE_OUT_OF_RANGE_SLOOP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W6029: Setting the loop variable to zero is an error.
        /// </summary>
        internal static string _rast_W_FT_VALUE_OUT_OF_RANGE_SLOOP_ZERO {
            get {
                return ResourceManager.GetString("_rast_W_FT_VALUE_OUT_OF_RANGE_SLOOP_ZERO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W6021: Defining zero-length function.
        /// </summary>
        internal static string _rast_W_FT_ZERO_LEN_FUNC {
            get {
                return ResourceManager.GetString("_rast_W_FT_ZERO_LEN_FUNC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W6022: Defining zero-length user-defined instruction.
        /// </summary>
        internal static string _rast_W_FT_ZERO_LEN_UD_INSTR {
            get {
                return ResourceManager.GetString("_rast_W_FT_ZERO_LEN_UD_INSTR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W6005: High point is less than low point.
        /// </summary>
        internal static string _rast_W_HI_PT_LESS_THAN_LOW_PT {
            get {
                return ResourceManager.GetString("_rast_W_HI_PT_LESS_THAN_LOW_PT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W6006: Jump offset zero.
        /// </summary>
        internal static string _rast_W_JMP_OFFSET_ZERO {
            get {
                return ResourceManager.GetString("_rast_W_JMP_OFFSET_ZERO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W6007: Loop variable not 1 at end of program. This means it was set but not used.
        /// </summary>
        internal static string _rast_W_LOOP_NOT_1_AT_END_OF_PGM {
            get {
                return ResourceManager.GetString("_rast_W_LOOP_NOT_1_AT_END_OF_PGM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W6008: Value for count is less than 1. Function will not be called.
        /// </summary>
        internal static string _rast_W_LOOPCALL_COUNT_LESS_THAN_ONE {
            get {
                return ResourceManager.GetString("_rast_W_LOOPCALL_COUNT_LESS_THAN_ONE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W6009: Window 95 and Windows 3.1 always return 12.
        /// </summary>
        internal static string _rast_W_MPS_ALWAYS_12_ON_WINDOWS {
            get {
                return ResourceManager.GetString("_rast_W_MPS_ALWAYS_12_ON_WINDOWS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W6019: The Freetype version is too old.
        /// </summary>
        internal static string _rast_W_Need_Newer_FreeType {
            get {
                return ResourceManager.GetString("_rast_W_Need_Newer_FreeType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W6010: Projection and freedom vectors at or near perpendicular.
        /// </summary>
        internal static string _rast_W_PF_VECTORS_AT_OR_NEAR_PERP {
            get {
                return ResourceManager.GetString("_rast_W_PF_VECTORS_AT_OR_NEAR_PERP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W6011: Point not touched.
        /// </summary>
        internal static string _rast_W_PT_NOT_TOUCHED {
            get {
                return ResourceManager.GetString("_rast_W_PT_NOT_TOUCHED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W6012: Function no longer needed because of dropped support of AA.
        /// </summary>
        internal static string _rast_W_SANGW_OBSELETE {
            get {
                return ResourceManager.GetString("_rast_W_SANGW_OBSELETE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0040: The data overlaps existing data.
        /// </summary>
        internal static string _Table_E_DataOverlap {
            get {
                return ResourceManager.GetString("_Table_E_DataOverlap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0041: An exception occurred preventing completion of table validation.
        /// </summary>
        internal static string _Table_E_Exception {
            get {
                return ResourceManager.GetString("_Table_E_Exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0042: The table is invalid.
        /// </summary>
        internal static string _Table_E_Invalid {
            get {
                return ResourceManager.GetString("_Table_E_Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I0040: Not an OpenType table, contents not validated.
        /// </summary>
        internal static string _Table_I_Non_OT_Table {
            get {
                return ResourceManager.GetString("_Table_I_Non_OT_Table", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I0041: Table not selected for validation.
        /// </summary>
        internal static string _Table_I_NotSelected {
            get {
                return ResourceManager.GetString("_Table_I_NotSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0051: Cannot perform test, a needed table is missing!.
        /// </summary>
        internal static string _TEST_E_TableMissing {
            get {
                return ResourceManager.GetString("_TEST_E_TableMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I0050: Cannot perform test since this is a CFF font.
        /// </summary>
        internal static string _TEST_I_NotForCFF {
            get {
                return ResourceManager.GetString("_TEST_I_NotForCFF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I0052: Rasterization not selected for validation.
        /// </summary>
        internal static string _TEST_I_RastTestNotSelected {
            get {
                return ResourceManager.GetString("_TEST_I_RastTestNotSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I0051: Cannot perform test, table is wrong version!.
        /// </summary>
        internal static string _TEST_I_TableVersion {
            get {
                return ResourceManager.GetString("_TEST_I_TableVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W0050: Cannot perform test due to an error in another table.
        /// </summary>
        internal static string _TEST_W_ErrorInAnotherTable {
            get {
                return ResourceManager.GetString("_TEST_W_ErrorInAnotherTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W0051: Cannot perform test due to other errors in this table.
        /// </summary>
        internal static string _TEST_W_OtherErrorsInTable {
            get {
                return ResourceManager.GetString("_TEST_W_OtherErrorsInTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4300: The Axis Table&apos;s BaseScriptListOffset is outside the BASE table.
        /// </summary>
        internal static string BASE_E_AxisTable_BaseScriptListOffset {
            get {
                return ResourceManager.GetString("BASE_E_AxisTable_BaseScriptListOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4301: The Axis Table&apos;s BaseScriptListOffset is null.
        /// </summary>
        internal static string BASE_E_AxisTable_BaseScriptListOffset_null {
            get {
                return ResourceManager.GetString("BASE_E_AxisTable_BaseScriptListOffset_null", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4302: The Axis Table&apos;s BaseTagListOffset is outside the BASE table.
        /// </summary>
        internal static string BASE_E_AxisTable_BaseTagListOffset {
            get {
                return ResourceManager.GetString("BASE_E_AxisTable_BaseTagListOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4303: The format of the BaseCoord table is not a valid value.
        /// </summary>
        internal static string BASE_E_BaseCoordTable_format {
            get {
                return ResourceManager.GetString("BASE_E_BaseCoordTable_format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4304: The BaseLangSysRecord&apos;s MinMax offset points outside the BASE table.
        /// </summary>
        internal static string BASE_E_BaseLangSysRecord_offset {
            get {
                return ResourceManager.GetString("BASE_E_BaseLangSysRecord_offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4305: The BaseLangSysRecord&apos;s MinMax offset is zero.
        /// </summary>
        internal static string BASE_E_BaseLangSysRecord_offset0 {
            get {
                return ResourceManager.GetString("BASE_E_BaseLangSysRecord_offset0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4306: The BaseScript Table&apos;s BaseLangSysRecord array isn&apos;t in alphabetical order.
        /// </summary>
        internal static string BASE_E_BaseLangSysRecord_order {
            get {
                return ResourceManager.GetString("BASE_E_BaseLangSysRecord_order", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4307: A BaseScript offset is outside the BASE table.
        /// </summary>
        internal static string BASE_E_BaseScriptList_Offset {
            get {
                return ResourceManager.GetString("BASE_E_BaseScriptList_Offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4308: The BaseScriptList table&apos;s BaseScriptRecords are not in alphabetical order.
        /// </summary>
        internal static string BASE_E_BaseScriptList_Order {
            get {
                return ResourceManager.GetString("BASE_E_BaseScriptList_Order", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4309: The tags in the BaseTagList table are not in alphabetical order.
        /// </summary>
        internal static string BASE_E_BaseTagList_TagOrder {
            get {
                return ResourceManager.GetString("BASE_E_BaseTagList_TagOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4310: The BaseTagList table contains an invalid tag.
        /// </summary>
        internal static string BASE_E_BaseTagList_TagValid {
            get {
                return ResourceManager.GetString("BASE_E_BaseTagList_TagValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4311: The BaseValues offset in the BaseScript table points outside the BASE table.
        /// </summary>
        internal static string BASE_E_BaseValuesOffset {
            get {
                return ResourceManager.GetString("BASE_E_BaseValuesOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4312: A BaseCoord offset in the BaseValues table is zero.
        /// </summary>
        internal static string BASE_E_BaseValuesTable_BCO_0 {
            get {
                return ResourceManager.GetString("BASE_E_BaseValuesTable_BCO_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4313: A BaseCoord offset in the BaseValues table points outside the BASE table.
        /// </summary>
        internal static string BASE_E_BaseValuesTable_BCO_invalid {
            get {
                return ResourceManager.GetString("BASE_E_BaseValuesTable_BCO_invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4314: The BaseScript table&apos;s DefaultMinMax offset points outside the BASE table.
        /// </summary>
        internal static string BASE_E_DefaultMinMaxOffset {
            get {
                return ResourceManager.GetString("BASE_E_DefaultMinMaxOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4315: The FeatMinMaxRecord MaxCoord offset points outside the BASE table.
        /// </summary>
        internal static string BASE_E_FeatMinMaxRecords_MaxCO_offset {
            get {
                return ResourceManager.GetString("BASE_E_FeatMinMaxRecords_MaxCO_offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4316: The FeatMinMaxRecord MinCoord offset points outside the BASE table.
        /// </summary>
        internal static string BASE_E_FeatMinMaxRecords_MinCO_offset {
            get {
                return ResourceManager.GetString("BASE_E_FeatMinMaxRecords_MinCO_offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4317: The HorizAxisOffset value is outside of the BASE table.
        /// </summary>
        internal static string BASE_E_HorizAxisOffset_OutsideTable {
            get {
                return ResourceManager.GetString("BASE_E_HorizAxisOffset_OutsideTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4318: The MaxCoord offset of the MinMax table points outside the BASE table.
        /// </summary>
        internal static string BASE_E_MinMaxTable_MaxCO {
            get {
                return ResourceManager.GetString("BASE_E_MinMaxTable_MaxCO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4319: The MinCoord offset of the MinMax table points outside the BASE table.
        /// </summary>
        internal static string BASE_E_MinMaxTable_MinCO {
            get {
                return ResourceManager.GetString("BASE_E_MinMaxTable_MinCO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4320: The version number is not 0x00010000.
        /// </summary>
        internal static string BASE_E_Version {
            get {
                return ResourceManager.GetString("BASE_E_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4321: The VertAxisOffset value is outside the BASE table.
        /// </summary>
        internal static string BASE_E_VertAxisOffset_OutsideTable {
            get {
                return ResourceManager.GetString("BASE_E_VertAxisOffset_OutsideTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4300: The Axis Table&apos;s BaseScriptListOffset is within a valid range.
        /// </summary>
        internal static string BASE_P_AxisTable_BaseScriptListOffset_valid {
            get {
                return ResourceManager.GetString("BASE_P_AxisTable_BaseScriptListOffset_valid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4301: The Axis Table&apos;s BaseTagListOffset is null.
        /// </summary>
        internal static string BASE_P_AxisTable_BaseTagListOffset_null {
            get {
                return ResourceManager.GetString("BASE_P_AxisTable_BaseTagListOffset_null", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4302: The Axis Table&apos;s BaseTagListOffset is within a valid range.
        /// </summary>
        internal static string BASE_P_AxisTable_BaseTagListOffset_valid {
            get {
                return ResourceManager.GetString("BASE_P_AxisTable_BaseTagListOffset_valid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4303: The format of the BaseCoord table is a valid value.
        /// </summary>
        internal static string BASE_P_BaseCoordTable_format {
            get {
                return ResourceManager.GetString("BASE_P_BaseCoordTable_format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4304: The BaseLangSysRecord array&apos;s MinMax offsets were all within a valid range.
        /// </summary>
        internal static string BASE_P_BaseLangSysRecord_offsets {
            get {
                return ResourceManager.GetString("BASE_P_BaseLangSysRecord_offsets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4305: The BaseScript Table&apos;s BaseLangSysRecord array is in alphabetical order.
        /// </summary>
        internal static string BASE_P_BaseLangSysRecord_order {
            get {
                return ResourceManager.GetString("BASE_P_BaseLangSysRecord_order", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4306: All BaseScript offsets are in a valid range.
        /// </summary>
        internal static string BASE_P_BaseScriptList_Offset {
            get {
                return ResourceManager.GetString("BASE_P_BaseScriptList_Offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4307: The BaseScriptList table&apos;s BaseScriptRecords are in alphabetical order.
        /// </summary>
        internal static string BASE_P_BaseScriptList_Order {
            get {
                return ResourceManager.GetString("BASE_P_BaseScriptList_Order", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4308: The tags in the BaseTagList table are in alphabetical order.
        /// </summary>
        internal static string BASE_P_BaseTagList_TagOrder {
            get {
                return ResourceManager.GetString("BASE_P_BaseTagList_TagOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4309: All the tags in the BaseTagList table were valid tags.
        /// </summary>
        internal static string BASE_P_BaseTagList_TagValid {
            get {
                return ResourceManager.GetString("BASE_P_BaseTagList_TagValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4310: The BaseValues offset in the BaseScript table is in a valid range.
        /// </summary>
        internal static string BASE_P_BaseValuesOffset {
            get {
                return ResourceManager.GetString("BASE_P_BaseValuesOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4311: The BaseValues offset in the BaseScript table is null.
        /// </summary>
        internal static string BASE_P_BaseValuesOffset_null {
            get {
                return ResourceManager.GetString("BASE_P_BaseValuesOffset_null", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4312: The BaseCoord offsets in the BaseValues table are all within a valid range.
        /// </summary>
        internal static string BASE_P_BaseValuesTable_BCO {
            get {
                return ResourceManager.GetString("BASE_P_BaseValuesTable_BCO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4313: The DefaultMinMax offset in the BaseScript table is in a valid range.
        /// </summary>
        internal static string BASE_P_DefaultMinMaxOffset {
            get {
                return ResourceManager.GetString("BASE_P_DefaultMinMaxOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4314: The DefaultMinMax offset in the BaseScript table is null.
        /// </summary>
        internal static string BASE_P_DefaultMinMaxOffset_null {
            get {
                return ResourceManager.GetString("BASE_P_DefaultMinMaxOffset_null", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4315: The MinMax table&apos;s FeatMinMaxRecord array contains valid offsets.
        /// </summary>
        internal static string BASE_P_FeatMinMaxRecords_offsets {
            get {
                return ResourceManager.GetString("BASE_P_FeatMinMaxRecords_offsets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4316: The HorizAxisOffset value is null.
        /// </summary>
        internal static string BASE_P_HorizAxisOffset_null {
            get {
                return ResourceManager.GetString("BASE_P_HorizAxisOffset_null", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4317: The HorizAxisOffset value is within the BASE table.
        /// </summary>
        internal static string BASE_P_HorizAxisOffset_valid {
            get {
                return ResourceManager.GetString("BASE_P_HorizAxisOffset_valid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4318: The MaxCoord offset of the MinMax table is within range.
        /// </summary>
        internal static string BASE_P_MinMaxTable_MaxCO {
            get {
                return ResourceManager.GetString("BASE_P_MinMaxTable_MaxCO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4319: The MaxCoord offset of the MinMax table is zero.
        /// </summary>
        internal static string BASE_P_MinMaxTable_MaxCO_0 {
            get {
                return ResourceManager.GetString("BASE_P_MinMaxTable_MaxCO_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4320: The MinCoord offset of the MinMax table is within range.
        /// </summary>
        internal static string BASE_P_MinMaxTable_MinCO {
            get {
                return ResourceManager.GetString("BASE_P_MinMaxTable_MinCO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4321: The MinCoord offset of the MinMax table is zero.
        /// </summary>
        internal static string BASE_P_MinMaxTable_MinCO_0 {
            get {
                return ResourceManager.GetString("BASE_P_MinMaxTable_MinCO_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4322: The version number is 0x00010000.
        /// </summary>
        internal static string BASE_P_Version {
            get {
                return ResourceManager.GetString("BASE_P_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4323: The VertAxisOffset value is null.
        /// </summary>
        internal static string BASE_P_VertAxisOffset_null {
            get {
                return ResourceManager.GetString("BASE_P_VertAxisOffset_null", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4324: The VertAxisOffset value is within the BASE table.
        /// </summary>
        internal static string BASE_P_VertAxisOffset_valid {
            get {
                return ResourceManager.GetString("BASE_P_VertAxisOffset_valid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0210: Count of CharStrings is not equal to numGlyphs in maxp.
        /// </summary>
        internal static string CFF_E_CharStringsCount {
            get {
                return ResourceManager.GetString("CFF_E_CharStringsCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0207: Top/FD Dictionary Unwind Error.
        /// </summary>
        internal static string CFF_E_DICTUnwind {
            get {
                return ResourceManager.GetString("CFF_E_DICTUnwind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0202: The header for the CFF table is wrong.
        /// </summary>
        internal static string CFF_E_Header {
            get {
                return ResourceManager.GetString("CFF_E_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0209: Failed to extract INDEX.
        /// </summary>
        internal static string CFF_E_INDEXCount {
            get {
                return ResourceManager.GetString("CFF_E_INDEXCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0203: Failed to parse and count items in the 4 main INDEX.
        /// </summary>
        internal static string CFF_E_MAININDEX_Enumeration {
            get {
                return ResourceManager.GetString("CFF_E_MAININDEX_Enumeration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0204: Name and TopDICT should have exactly 1 item each..
        /// </summary>
        internal static string CFF_E_NameDICTSize {
            get {
                return ResourceManager.GetString("CFF_E_NameDICTSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0212: Names and Strings should be us-ascii.
        /// </summary>
        internal static string CFF_E_Non_ASCII_String_or_Name {
            get {
                return ResourceManager.GetString("CFF_E_Non_ASCII_String_or_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0208: Private Dictionary Unwind Error.
        /// </summary>
        internal static string CFF_E_PrivDICTUnwind {
            get {
                return ResourceManager.GetString("CFF_E_PrivDICTUnwind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0206: structure overlap detected.
        /// </summary>
        internal static string CFF_E_StructOverlap {
            get {
                return ResourceManager.GetString("CFF_E_StructOverlap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I0211: Registry, Ordering, Supplement of the CID Font.
        /// </summary>
        internal static string CFF_I_CIDROS {
            get {
                return ResourceManager.GetString("CFF_I_CIDROS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I0200: Validation for the CFF table is not completedly implemented.
        /// </summary>
        internal static string CFF_I_NotValidated {
            get {
                return ResourceManager.GetString("CFF_I_NotValidated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I0201: The CFF major.minor version for this table.
        /// </summary>
        internal static string CFF_I_Version {
            get {
                return ResourceManager.GetString("CFF_I_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0210: Count of CharStrings is equal to numGlyphs in maxp.
        /// </summary>
        internal static string CFF_P_CharStringsCount {
            get {
                return ResourceManager.GetString("CFF_P_CharStringsCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0207: Top/FD Dictionary Unwind Passed.
        /// </summary>
        internal static string CFF_P_DICTUnwind {
            get {
                return ResourceManager.GetString("CFF_P_DICTUnwind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0202: The header for the CFF table is okay.
        /// </summary>
        internal static string CFF_P_Header {
            get {
                return ResourceManager.GetString("CFF_P_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0209: Number of items in an INDEX.
        /// </summary>
        internal static string CFF_P_INDEXCount {
            get {
                return ResourceManager.GetString("CFF_P_INDEXCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0203: Parse and Count items in the 4 main INDEX.
        /// </summary>
        internal static string CFF_P_MAININDEX_Enumeration {
            get {
                return ResourceManager.GetString("CFF_P_MAININDEX_Enumeration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0204: Name and TopDICT have exactly 1 item each..
        /// </summary>
        internal static string CFF_P_NameDICTSize {
            get {
                return ResourceManager.GetString("CFF_P_NameDICTSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0212: Names and Strings are us-ascii.
        /// </summary>
        internal static string CFF_P_Non_ASCII_String_or_Name {
            get {
                return ResourceManager.GetString("CFF_P_Non_ASCII_String_or_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0208: Private Dictionary Unwind Passed.
        /// </summary>
        internal static string CFF_P_PrivDICTUnwind {
            get {
                return ResourceManager.GetString("CFF_P_PrivDICTUnwind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W0205: The first offset in an INDEX structure should be 1.
        /// </summary>
        internal static string CFF_W_INDEXFirstOffset {
            get {
                return ResourceManager.GetString("CFF_W_INDEXFirstOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0300: A duplicate subtable was found.
        /// </summary>
        internal static string cmap_E_DuplicateSubtables {
            get {
                return ResourceManager.GetString("cmap_E_DuplicateSubtables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0301: The subtable is fmt 0, but the length is not 262.
        /// </summary>
        internal static string cmap_E_f0_length {
            get {
                return ResourceManager.GetString("cmap_E_f0_length", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0324: The last endCharCode is greater than 0x10ffff.
        /// </summary>
        internal static string cmap_E_f12_EndCode_GT_10FFFF {
            get {
                return ResourceManager.GetString("cmap_E_f12_EndCode_GT_10FFFF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0302: The groups are not sorted by ascending startCharCode.
        /// </summary>
        internal static string cmap_E_f12_SortOrder {
            get {
                return ResourceManager.GetString("cmap_E_f12_SortOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0303: The startCharCode is greater than the endCharCode.
        /// </summary>
        internal static string cmap_E_f12_StartCode_GT_EndCode {
            get {
                return ResourceManager.GetString("cmap_E_f12_StartCode_GT_EndCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0333: Illegal Unicode code point value.
        /// </summary>
        internal static string cmap_E_f14_CodePoint {
            get {
                return ResourceManager.GetString("cmap_E_f14_CodePoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0338: Default UVS table offset out of range of table.
        /// </summary>
        internal static string cmap_E_f14_DefaultUVS_EOT {
            get {
                return ResourceManager.GetString("cmap_E_f14_DefaultUVS_EOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0334: Default UVS table value ranges overlap or out of order.
        /// </summary>
        internal static string cmap_E_f14_DefaultUVS_Sort {
            get {
                return ResourceManager.GetString("cmap_E_f14_DefaultUVS_Sort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0342: Default UVS table offset out of range of offset tables.
        /// </summary>
        internal static string cmap_E_f14_DefaultUVS_TooSmall {
            get {
                return ResourceManager.GetString("cmap_E_f14_DefaultUVS_TooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0337: GlyphID in Non-Default UVS table greater than number of glyphs in the font.
        /// </summary>
        internal static string cmap_E_f14_GlyphID_Range {
            get {
                return ResourceManager.GetString("cmap_E_f14_GlyphID_Range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0335: Default UVS table startUnicodeValue + additionalCount greater than 0xFFFFFF.
        /// </summary>
        internal static string cmap_E_f14_LastCode_GT_FFFFFF {
            get {
                return ResourceManager.GetString("cmap_E_f14_LastCode_GT_FFFFFF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0339: Non-Default UVS table offset out of range of table.
        /// </summary>
        internal static string cmap_E_f14_NonDefaultUVS_EOT {
            get {
                return ResourceManager.GetString("cmap_E_f14_NonDefaultUVS_EOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0336: Non-Default UVS table value ranges overlap or out of order.
        /// </summary>
        internal static string cmap_E_f14_NonDefaultUVS_Sort {
            get {
                return ResourceManager.GetString("cmap_E_f14_NonDefaultUVS_Sort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0341: Non-Default UVS table offset out of range of offset tables.
        /// </summary>
        internal static string cmap_E_f14_NonDefaultUVS_TooSmall {
            get {
                return ResourceManager.GetString("cmap_E_f14_NonDefaultUVS_TooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0343: Overlapping of Format 14 tables.
        /// </summary>
        internal static string cmap_E_f14_OverlappingMaps {
            get {
                return ResourceManager.GetString("cmap_E_f14_OverlappingMaps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0330: Illegal variation selector.
        /// </summary>
        internal static string cmap_E_f14_VarSelector {
            get {
                return ResourceManager.GetString("cmap_E_f14_VarSelector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0332: More than one record for a given variation selector.
        /// </summary>
        internal static string cmap_E_f14_VarSelector_Duplicate {
            get {
                return ResourceManager.GetString("cmap_E_f14_VarSelector_Duplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0331: Variation Selectors not in ascendering order.
        /// </summary>
        internal static string cmap_E_f14_VarSelector_Order {
            get {
                return ResourceManager.GetString("cmap_E_f14_VarSelector_Order", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0304: The endCode array is not in ascending order.
        /// </summary>
        internal static string cmap_E_f4_EndCodeOrder {
            get {
                return ResourceManager.GetString("cmap_E_f4_EndCodeOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0305: The entrySelector field does not equal the calculated value.
        /// </summary>
        internal static string cmap_E_f4_entrySelector {
            get {
                return ResourceManager.GetString("cmap_E_f4_entrySelector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0306: The final value in the endCode array is not 0xffff.
        /// </summary>
        internal static string cmap_E_f4_FinalEndCode {
            get {
                return ResourceManager.GetString("cmap_E_f4_FinalEndCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0307: The idRangeOffset is 0 and idDelta + startCode is negative.
        /// </summary>
        internal static string cmap_E_f4_idDeltaNeg {
            get {
                return ResourceManager.GetString("cmap_E_f4_idDeltaNeg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0308: The idRangeOffset indexes past the end of the subtable.
        /// </summary>
        internal static string cmap_E_f4_idRangeOffset {
            get {
                return ResourceManager.GetString("cmap_E_f4_idRangeOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0309: The rangeShift field does not equal the calculated value.
        /// </summary>
        internal static string cmap_E_f4_rangeShift {
            get {
                return ResourceManager.GetString("cmap_E_f4_rangeShift", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0310: The reservedPad field is not 0.
        /// </summary>
        internal static string cmap_E_f4_reservedPad {
            get {
                return ResourceManager.GetString("cmap_E_f4_reservedPad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0311: The searchRange field does not equal the calculated value.
        /// </summary>
        internal static string cmap_E_f4_searchRange {
            get {
                return ResourceManager.GetString("cmap_E_f4_searchRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0312: The segCountX2 field is not even.
        /// </summary>
        internal static string cmap_E_f4_segCountX2 {
            get {
                return ResourceManager.GetString("cmap_E_f4_segCountX2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0313: The startCode is greater than the endCode.
        /// </summary>
        internal static string cmap_E_f4_StartCode_GT_EndCode {
            get {
                return ResourceManager.GetString("cmap_E_f4_StartCode_GT_EndCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0314: A character maps to an invalid glyphID.
        /// </summary>
        internal static string cmap_E_Mapping {
            get {
                return ResourceManager.GetString("cmap_E_Mapping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0323: A non-mac subtable has a non-zero language value.
        /// </summary>
        internal static string cmap_E_NonMacSubtableLanguage {
            get {
                return ResourceManager.GetString("cmap_E_NonMacSubtableLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0315: The subtable length points past the end of the table.
        /// </summary>
        internal static string cmap_E_SubtableLength_eot {
            get {
                return ResourceManager.GetString("cmap_E_SubtableLength_eot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0316: The subtable length is zero.
        /// </summary>
        internal static string cmap_E_SubtableLength_zero {
            get {
                return ResourceManager.GetString("cmap_E_SubtableLength_zero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0317: The subtable offset points past the end of the table.
        /// </summary>
        internal static string cmap_E_SubtableOffset_eot {
            get {
                return ResourceManager.GetString("cmap_E_SubtableOffset_eot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0318: The subtable offset is zero.
        /// </summary>
        internal static string cmap_E_SubtableOffset_zero {
            get {
                return ResourceManager.GetString("cmap_E_SubtableOffset_zero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0319: Overlapping subtables were found.
        /// </summary>
        internal static string cmap_E_SubtableOverlap {
            get {
                return ResourceManager.GetString("cmap_E_SubtableOverlap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0320: The subtables are not in the correct order.
        /// </summary>
        internal static string cmap_E_SubtableSortOrder {
            get {
                return ResourceManager.GetString("cmap_E_SubtableSortOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0321: The subtable&apos;s format number is invalid.
        /// </summary>
        internal static string cmap_E_SubtableValidFormat {
            get {
                return ResourceManager.GetString("cmap_E_SubtableValidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0322: The table version number is not 0.
        /// </summary>
        internal static string cmap_E_version {
            get {
                return ResourceManager.GetString("cmap_E_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0300: Character code 240, the Apple logo, is mapped to missing glyph in cmap 1,0 (legal requirement for Microsoft fonts).
        /// </summary>
        internal static string cmap_P_AppleLogo {
            get {
                return ResourceManager.GetString("cmap_P_AppleLogo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0301: The table contains both Apple and Microsoft subtables.
        /// </summary>
        internal static string cmap_P_AppleMSSupport {
            get {
                return ResourceManager.GetString("cmap_P_AppleMSSupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0302: There are no duplicate subtables.
        /// </summary>
        internal static string cmap_P_DuplicateSubtables {
            get {
                return ResourceManager.GetString("cmap_P_DuplicateSubtables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0303: Character code 219, the euro character, is mapped for cmap 1,0.
        /// </summary>
        internal static string cmap_P_EuroGlyph_Mac {
            get {
                return ResourceManager.GetString("cmap_P_EuroGlyph_Mac", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0304: Character code U+20AC, the euro character, is mapped for cmap 3,1.
        /// </summary>
        internal static string cmap_P_EuroGlyph_Uni {
            get {
                return ResourceManager.GetString("cmap_P_EuroGlyph_Uni", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0305: The subtable internal format appears valid.
        /// </summary>
        internal static string cmap_P_InternalFormat {
            get {
                return ResourceManager.GetString("cmap_P_InternalFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0314: All non mac subtables have a language field of zero.
        /// </summary>
        internal static string cmap_P_NonMacSubtableLanguage {
            get {
                return ResourceManager.GetString("cmap_P_NonMacSubtableLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0306: Each subtable length is within the table.
        /// </summary>
        internal static string cmap_P_SubtableLength {
            get {
                return ResourceManager.GetString("cmap_P_SubtableLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0307: Each subtable offset is within the table.
        /// </summary>
        internal static string cmap_P_SubtableOffset {
            get {
                return ResourceManager.GetString("cmap_P_SubtableOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0308: No overlapping subtables were found.
        /// </summary>
        internal static string cmap_P_SubtableOverlap {
            get {
                return ResourceManager.GetString("cmap_P_SubtableOverlap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0309: The subtables are in the correct order.
        /// </summary>
        internal static string cmap_P_SubtableSortOrder {
            get {
                return ResourceManager.GetString("cmap_P_SubtableSortOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0310: Each subtable&apos;s format number is valid.
        /// </summary>
        internal static string cmap_P_SubtableValidFormat {
            get {
                return ResourceManager.GetString("cmap_P_SubtableValidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0311: No characters are mapped in the Unicode Private Use area.
        /// </summary>
        internal static string cmap_P_UnicodePrivateUse {
            get {
                return ResourceManager.GetString("cmap_P_UnicodePrivateUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0313: No characters are mapped in the Unicode Private Use area except the &apos;fl&apos; and/or &apos;fi&apos; ligatures.
        /// </summary>
        internal static string cmap_P_UnicodePrivateUse_lig {
            get {
                return ResourceManager.GetString("cmap_P_UnicodePrivateUse_lig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0312: The table version number is 0.
        /// </summary>
        internal static string cmap_P_version {
            get {
                return ResourceManager.GetString("cmap_P_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W0300: Character code 240, the Apple logo, isn&apos;t mapped to missing glyph in cmap 1,0 (legal requirement for Microsoft fonts).
        /// </summary>
        internal static string cmap_W_AppleLogo {
            get {
                return ResourceManager.GetString("cmap_W_AppleLogo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W0301: Apple logo mapping test not performed, cmap 1,0 not present.
        /// </summary>
        internal static string cmap_W_AppleLogo_NoMap {
            get {
                return ResourceManager.GetString("cmap_W_AppleLogo_NoMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W0302: The table does not contain any Apple subtables.
        /// </summary>
        internal static string cmap_W_AppleMSSupport_A {
            get {
                return ResourceManager.GetString("cmap_W_AppleMSSupport_A", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W0303: The table does not contain any Microsoft subtables.
        /// </summary>
        internal static string cmap_W_AppleMSSupport_M {
            get {
                return ResourceManager.GetString("cmap_W_AppleMSSupport_M", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W0304: Character code 219, the euro character, is not mapped in cmap 1,0.
        /// </summary>
        internal static string cmap_W_EuroGlyph_Mac {
            get {
                return ResourceManager.GetString("cmap_W_EuroGlyph_Mac", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W0305: Character code U+20AC, the euro character, is not mapped in cmap 3,1.
        /// </summary>
        internal static string cmap_W_EuroGlyph_Uni {
            get {
                return ResourceManager.GetString("cmap_W_EuroGlyph_Uni", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W0306: The format is 12, but the encoding id is not 10.
        /// </summary>
        internal static string cmap_W_f12_EncID {
            get {
                return ResourceManager.GetString("cmap_W_f12_EncID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W0344: Format 14 tables not packed.
        /// </summary>
        internal static string cmap_W_f14_NonPacked {
            get {
                return ResourceManager.GetString("cmap_W_f14_NonPacked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W0307: Characters are mapped in the Unicode Private Use area.
        /// </summary>
        internal static string cmap_W_UnicodePrivateUse {
            get {
                return ResourceManager.GetString("cmap_W_UnicodePrivateUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0400: The length of the cvt table is not an even number of bytes.
        /// </summary>
        internal static string cvt_E_length_odd {
            get {
                return ResourceManager.GetString("cvt_E_length_odd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0400: The length of the cvt table is an even number of bytes.
        /// </summary>
        internal static string cvt_P_length_even {
            get {
                return ResourceManager.GetString("cvt_P_length_even", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A0500: Cannot cope with unusual ttc table layout.
        /// </summary>
        internal static string DSIG_A_UNUSUAL_TTC_TABLE_LAYOUT {
            get {
                return ResourceManager.GetString("DSIG_A_UNUSUAL_TTC_TABLE_LAYOUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0500: A signature block is not in format 1.
        /// </summary>
        internal static string DSIG_E_Formats {
            get {
                return ResourceManager.GetString("DSIG_E_Formats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0501: A signature block contains a reserved value that is not zero.
        /// </summary>
        internal static string DSIG_E_Reserved {
            get {
                return ResourceManager.GetString("DSIG_E_Reserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0502: The digital signature of the file did not verify.
        /// </summary>
        internal static string DSIG_E_VerifySignature {
            get {
                return ResourceManager.GetString("DSIG_E_VerifySignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I0500: DSIG Information.
        /// </summary>
        internal static string DSIG_I_VerifySignature_Generic {
            get {
                return ResourceManager.GetString("DSIG_I_VerifySignature_Generic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0500: All signature blocks were in format 1.
        /// </summary>
        internal static string DSIG_P_Formats {
            get {
                return ResourceManager.GetString("DSIG_P_Formats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0501: All signature blocks&apos; reserved values were 0.
        /// </summary>
        internal static string DSIG_P_Reserved {
            get {
                return ResourceManager.GetString("DSIG_P_Reserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0502: The digital signature of the file verified correctly.
        /// </summary>
        internal static string DSIG_P_VerifySignature {
            get {
                return ResourceManager.GetString("DSIG_P_VerifySignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W0500: DSIG Warning.
        /// </summary>
        internal static string DSIG_W_VerifySignature_Generic {
            get {
                return ResourceManager.GetString("DSIG_W_VerifySignature_Generic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0602: The glyph image data is invalid.
        /// </summary>
        internal static string EBDT_E_GlyphImageData {
            get {
                return ResourceManager.GetString("EBDT_E_GlyphImageData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0601: The EBLC table is not present.
        /// </summary>
        internal static string EBDT_E_TableDependency {
            get {
                return ResourceManager.GetString("EBDT_E_TableDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0600: The version is not 0x00020000.
        /// </summary>
        internal static string EBDT_E_version {
            get {
                return ResourceManager.GetString("EBDT_E_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0602: The glyph image data is valid.
        /// </summary>
        internal static string EBDT_P_GlyphImageData {
            get {
                return ResourceManager.GetString("EBDT_P_GlyphImageData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0601: The EBLC table is present.
        /// </summary>
        internal static string EBDT_P_TableDependency {
            get {
                return ResourceManager.GetString("EBDT_P_TableDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0600: The version is 0x00020000.
        /// </summary>
        internal static string EBDT_P_version {
            get {
                return ResourceManager.GetString("EBDT_P_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0700: the bitDepth field is not a valid value.
        /// </summary>
        internal static string EBLC_E_bitDepth {
            get {
                return ResourceManager.GetString("EBLC_E_bitDepth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0704: Bitmap size table start index is larger than the end index value.
        /// </summary>
        internal static string EBLC_E_BitmapSizeTableIndexOrder {
            get {
                return ResourceManager.GetString("EBLC_E_BitmapSizeTableIndexOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0701: The indexSubTableArrayOffset field is not in a valid range.
        /// </summary>
        internal static string EBLC_E_indexSubTableArrayOffset {
            get {
                return ResourceManager.GetString("EBLC_E_indexSubTableArrayOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0705: The index subtable is not valid.
        /// </summary>
        internal static string EBLC_E_indexSubTables {
            get {
                return ResourceManager.GetString("EBLC_E_indexSubTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0706: The number of sizes requires more space than available in the EBLC table..
        /// </summary>
        internal static string EBLC_E_numSizes {
            get {
                return ResourceManager.GetString("EBLC_E_numSizes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0703: The EBDT table is not present.
        /// </summary>
        internal static string EBLC_E_TableDependency {
            get {
                return ResourceManager.GetString("EBLC_E_TableDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0702: The version is not 0x00020000.
        /// </summary>
        internal static string EBLC_E_version {
            get {
                return ResourceManager.GetString("EBLC_E_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0700: Each bitmapSizeTable&apos;s bitDepth field was valid.
        /// </summary>
        internal static string EBLC_P_bitDepth {
            get {
                return ResourceManager.GetString("EBLC_P_bitDepth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0704: Each bitmapSizeTable&apos;s indices are ordered okay.
        /// </summary>
        internal static string EBLC_P_BitmapSizeTableIndexOrder {
            get {
                return ResourceManager.GetString("EBLC_P_BitmapSizeTableIndexOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0701: Each bitmapSizeTable&apos;s indexSubTableArrayOffset field is in a valid range.
        /// </summary>
        internal static string EBLC_P_indexSubTableArrayOffset {
            get {
                return ResourceManager.GetString("EBLC_P_indexSubTableArrayOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0705: The index subtable is valid.
        /// </summary>
        internal static string EBLC_P_indexSubTables {
            get {
                return ResourceManager.GetString("EBLC_P_indexSubTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0706: The number of sizes in the EBLC table fits table size..
        /// </summary>
        internal static string EBLC_P_numSizes {
            get {
                return ResourceManager.GetString("EBLC_P_numSizes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0703: The EBDT table is also present.
        /// </summary>
        internal static string EBLC_P_TableDependency {
            get {
                return ResourceManager.GetString("EBLC_P_TableDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0702: The version is 0x00020000.
        /// </summary>
        internal static string EBLC_P_version {
            get {
                return ResourceManager.GetString("EBLC_P_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0804: Substitute bitmap strike is not in font.
        /// </summary>
        internal static string EBSC_E_StrikeSize {
            get {
                return ResourceManager.GetString("EBSC_E_StrikeSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0803: Could not verify substitute bitmap strikes because EBLC is not present.
        /// </summary>
        internal static string EBSC_E_StrikeSizeNoEBLC {
            get {
                return ResourceManager.GetString("EBSC_E_StrikeSizeNoEBLC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0802: Other required bitmap tables are not present.
        /// </summary>
        internal static string EBSC_E_TableDependency {
            get {
                return ResourceManager.GetString("EBSC_E_TableDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0800: The table length does not equal the calculated value.
        /// </summary>
        internal static string EBSC_E_TableLength {
            get {
                return ResourceManager.GetString("EBSC_E_TableLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0801: The version is not 0x00020000.
        /// </summary>
        internal static string EBSC_E_version {
            get {
                return ResourceManager.GetString("EBSC_E_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0803: All substitue bitmap stikes are present.
        /// </summary>
        internal static string EBSC_P_StrikeSize {
            get {
                return ResourceManager.GetString("EBSC_P_StrikeSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0802: Required bitmap tables present (EBLC and EBDT).
        /// </summary>
        internal static string EBSC_P_TableDependency {
            get {
                return ResourceManager.GetString("EBSC_P_TableDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0800: The table length equals the calculated value.
        /// </summary>
        internal static string EBSC_P_TableLength {
            get {
                return ResourceManager.GetString("EBSC_P_TableLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P0801: The version is 0x00020000.
        /// </summary>
        internal static string EBSC_P_version {
            get {
                return ResourceManager.GetString("EBSC_P_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I0900: Validation for the fpgm table is not directly implemented, but rasterization testing will validate any executed hinting instructions.
        /// </summary>
        internal static string fpgm_I_NotValidated {
            get {
                return ResourceManager.GetString("fpgm_I_NotValidated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1000: Some rangeGaspBehavior fields contain invalid flags.
        /// </summary>
        internal static string gasp_E_rangeGaspBehavior {
            get {
                return ResourceManager.GetString("gasp_E_rangeGaspBehavior", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1001: The gaspRange array does not have a 0xFFFF sentinel.
        /// </summary>
        internal static string gasp_E_Sentinel {
            get {
                return ResourceManager.GetString("gasp_E_Sentinel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1002: The gaspRange array is not in sorted order.
        /// </summary>
        internal static string gasp_E_SortOrder {
            get {
                return ResourceManager.GetString("gasp_E_SortOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1003: The version number is not valid.
        /// </summary>
        internal static string gasp_E_Version {
            get {
                return ResourceManager.GetString("gasp_E_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1004: No adjacent ranges have identical flags.
        /// </summary>
        internal static string gasp_P_AdjRangeIdenticalFlags {
            get {
                return ResourceManager.GetString("gasp_P_AdjRangeIdenticalFlags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1000: All of the rangeGaspBehavior fields contain valid flags.
        /// </summary>
        internal static string gasp_P_rangeGaspBehavior {
            get {
                return ResourceManager.GetString("gasp_P_rangeGaspBehavior", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1001: The gaspRange array has a 0xFFFF sentinel.
        /// </summary>
        internal static string gasp_P_Sentinel {
            get {
                return ResourceManager.GetString("gasp_P_Sentinel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1002: The gaspRange array is in sorted order.
        /// </summary>
        internal static string gasp_P_SortOrder {
            get {
                return ResourceManager.GetString("gasp_P_SortOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1003: The version number is valid.
        /// </summary>
        internal static string gasp_P_Version {
            get {
                return ResourceManager.GetString("gasp_P_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1000: Two adjacent ranges have identical flags.
        /// </summary>
        internal static string gasp_W_AdjRangeIdenticalFlags {
            get {
                return ResourceManager.GetString("gasp_W_AdjRangeIdenticalFlags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4000: The AttachPoint array extends past the end of the GDEF table.
        /// </summary>
        internal static string GDEF_E_AttachListTable_AttachPointArray_PastEOT {
            get {
                return ResourceManager.GetString("GDEF_E_AttachListTable_AttachPointArray_PastEOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4001: The AttachPoint offset points outside of the GDEF table.
        /// </summary>
        internal static string GDEF_E_AttachListTable_AttachPointOffset {
            get {
                return ResourceManager.GetString("GDEF_E_AttachListTable_AttachPointOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4002: The Coverage offset is zero.
        /// </summary>
        internal static string GDEF_E_AttachListTable_CoverageOffset_0 {
            get {
                return ResourceManager.GetString("GDEF_E_AttachListTable_CoverageOffset_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4003: The Coverage offset points past the end of the GDEF table.
        /// </summary>
        internal static string GDEF_E_AttachListTable_CoverageOffset_invalid {
            get {
                return ResourceManager.GetString("GDEF_E_AttachListTable_CoverageOffset_invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4004: The CaretValueFormat is invalid.
        /// </summary>
        internal static string GDEF_E_CaretValueTable_Format {
            get {
                return ResourceManager.GetString("GDEF_E_CaretValueTable_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4005: A header offset doesn&apos;t point within the table.
        /// </summary>
        internal static string GDEF_E_HeaderOffset {
            get {
                return ResourceManager.GetString("GDEF_E_HeaderOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4006: The Coverage offset is zero.
        /// </summary>
        internal static string GDEF_E_LigCaretListTable_CoverageOffset_0 {
            get {
                return ResourceManager.GetString("GDEF_E_LigCaretListTable_CoverageOffset_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4007: The Coverage offset points past the end of the GDEF table.
        /// </summary>
        internal static string GDEF_E_LigCaretListTable_CoverageOffset_invalid {
            get {
                return ResourceManager.GetString("GDEF_E_LigCaretListTable_CoverageOffset_invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4008: The LigGlyph array extends past the end of the GDEF table.
        /// </summary>
        internal static string GDEF_E_LigCaretListTable_LigGlyphArray_PastEOT {
            get {
                return ResourceManager.GetString("GDEF_E_LigCaretListTable_LigGlyphArray_PastEOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4009: The LigGlyph offset points outside of the GDEF table.
        /// </summary>
        internal static string GDEF_E_LigCaretListTable_LigGlyphOffset {
            get {
                return ResourceManager.GetString("GDEF_E_LigCaretListTable_LigGlyphOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4010: The CaretValue array extends past the end of the GDEF table.
        /// </summary>
        internal static string GDEF_E_LigGlyphTable_CaretValueArray_PastEOT {
            get {
                return ResourceManager.GetString("GDEF_E_LigGlyphTable_CaretValueArray_PastEOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4011: The CaretValue offset points outside of the GDEF table.
        /// </summary>
        internal static string GDEF_E_LigGlyphTable_CaretValueOffset {
            get {
                return ResourceManager.GetString("GDEF_E_LigGlyphTable_CaretValueOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4014: The MarkGlyphSetsDefTable extends past the end of the GDEF table.
        /// </summary>
        internal static string GDEF_E_MarkGlyphSetsDefTable_PastEOT {
            get {
                return ResourceManager.GetString("GDEF_E_MarkGlyphSetsDefTable_PastEOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4013: The MarkSetTableFormat is not 1.
        /// </summary>
        internal static string GDEF_E_MarkSetTableFormat {
            get {
                return ResourceManager.GetString("GDEF_E_MarkSetTableFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4012: The version number is neither 0x00010000 nor 0x0001002.
        /// </summary>
        internal static string GDEF_E_Version {
            get {
                return ResourceManager.GetString("GDEF_E_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I4000: The MarkSetCount of the GDEF table.
        /// </summary>
        internal static string GDEF_I_MarkSetCount {
            get {
                return ResourceManager.GetString("GDEF_I_MarkSetCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4000: The offsets in the AttachPoint array are valid.
        /// </summary>
        internal static string GDEF_P_AttachListTable_AttachPointArray {
            get {
                return ResourceManager.GetString("GDEF_P_AttachListTable_AttachPointArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4001: The Coverage offset is nonzero and points within the GDEF table.
        /// </summary>
        internal static string GDEF_P_AttachListTable_CoverageOffset {
            get {
                return ResourceManager.GetString("GDEF_P_AttachListTable_CoverageOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4002: All header offsets point within the table.
        /// </summary>
        internal static string GDEF_P_HeaderOffsets {
            get {
                return ResourceManager.GetString("GDEF_P_HeaderOffsets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4003: The Coverage offset is nonzero and points within the GDEF table.
        /// </summary>
        internal static string GDEF_P_LigCaretListTable_CoverageOffset {
            get {
                return ResourceManager.GetString("GDEF_P_LigCaretListTable_CoverageOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4004: The offsets in the LigGlyph array are valid.
        /// </summary>
        internal static string GDEF_P_LigCaretListTable_LigGlyphArray {
            get {
                return ResourceManager.GetString("GDEF_P_LigCaretListTable_LigGlyphArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4005: The offsets in the CaretValue array are valid.
        /// </summary>
        internal static string GDEF_P_LigGlyphTable_CaretValueArray {
            get {
                return ResourceManager.GetString("GDEF_P_LigGlyphTable_CaretValueArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4007: The MarkGlyphSetsDefTable of the GDEF table is okay.
        /// </summary>
        internal static string GDEF_P_MarkGlyphSetsDefTable {
            get {
                return ResourceManager.GetString("GDEF_P_MarkGlyphSetsDefTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4006: The version numbers 0x00010000 or 0x0001002 are okay.
        /// </summary>
        internal static string GDEF_P_Version {
            get {
                return ResourceManager.GetString("GDEF_P_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A1113: Test failed because of unhandled exception.
        /// </summary>
        internal static string GERR_VAL_FAILURE {
            get {
                return ResourceManager.GetString("GERR_VAL_FAILURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1100: Component&apos;s transform is ambigously defined.
        /// </summary>
        internal static string glyf_E_CompositeAmbigousTransform {
            get {
                return ResourceManager.GetString("glyf_E_CompositeAmbigousTransform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1101: An exception occurred during glyph validation or loading of one of its components.
        /// </summary>
        internal static string glyf_E_ExceptionUnhandeled {
            get {
                return ResourceManager.GetString("glyf_E_ExceptionUnhandeled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1102: Unable  to start validation of &apos;glyf&apos; table.
        /// </summary>
        internal static string glyf_E_UnableToStartValidation {
            get {
                return ResourceManager.GetString("glyf_E_UnableToStartValidation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I1100: No need to check identical glyf or EBDT tables in TTC beyond the first member.
        /// </summary>
        internal static string glyf_I_IDENTICAL_GLYF_TABLES_IN_TTC {
            get {
                return ResourceManager.GetString("glyf_I_IDENTICAL_GLYF_TABLES_IN_TTC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1100: Reserved bit is set to 1.
        /// </summary>
        internal static string glyf_W_CompositeReservedBit {
            get {
                return ResourceManager.GetString("glyf_W_CompositeReservedBit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4100: The AnchorFormat field is invalid.
        /// </summary>
        internal static string GPOS_E_AnchorTable_format {
            get {
                return ResourceManager.GetString("GPOS_E_AnchorTable_format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4101: The array order is incorrect.
        /// </summary>
        internal static string GPOS_E_Array_order {
            get {
                return ResourceManager.GetString("GPOS_E_Array_order", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4102: The array extends past the end of the GPOS table.
        /// </summary>
        internal static string GPOS_E_Array_pastEOT {
            get {
                return ResourceManager.GetString("GPOS_E_Array_pastEOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4103: The extension lookup type is invalid.
        /// </summary>
        internal static string GPOS_E_ExtensionLookupType {
            get {
                return ResourceManager.GetString("GPOS_E_ExtensionLookupType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4104: A header offset doesn&apos;t point within the table.
        /// </summary>
        internal static string GPOS_E_HeaderOffset {
            get {
                return ResourceManager.GetString("GPOS_E_HeaderOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4105: A header offset has a value of 0.
        /// </summary>
        internal static string GPOS_E_HeaderOffset_0 {
            get {
                return ResourceManager.GetString("GPOS_E_HeaderOffset_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4106: An offset points past the end of the GPOS table.
        /// </summary>
        internal static string GPOS_E_Offset_PastEOT {
            get {
                return ResourceManager.GetString("GPOS_E_Offset_PastEOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4107: The PosLookupRecord SequenceIndex is greater than the Input sequence size.
        /// </summary>
        internal static string GPOS_E_PosLookupRecord_SequenceIndex {
            get {
                return ResourceManager.GetString("GPOS_E_PosLookupRecord_SequenceIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4108: The subtable format value is invalid.
        /// </summary>
        internal static string GPOS_E_SubtableFormat {
            get {
                return ResourceManager.GetString("GPOS_E_SubtableFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4109: The Value array extends past the end of the GPOS table.
        /// </summary>
        internal static string GPOS_E_ValueArray_pastEOT {
            get {
                return ResourceManager.GetString("GPOS_E_ValueArray_pastEOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4110: The ValueFormat reserved bits are not all zero.
        /// </summary>
        internal static string GPOS_E_ValueFormatReservedBits {
            get {
                return ResourceManager.GetString("GPOS_E_ValueFormatReservedBits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4111: The version number is not 0x00010000.
        /// </summary>
        internal static string GPOS_E_Version {
            get {
                return ResourceManager.GetString("GPOS_E_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4100: The Anchor table is valid.
        /// </summary>
        internal static string GPOS_P_AnchorTable {
            get {
                return ResourceManager.GetString("GPOS_P_AnchorTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4101: The BaseArray table is valid.
        /// </summary>
        internal static string GPOS_P_BaseArrayTable {
            get {
                return ResourceManager.GetString("GPOS_P_BaseArrayTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4102: The BaseRecord is valid.
        /// </summary>
        internal static string GPOS_P_BaseRecord {
            get {
                return ResourceManager.GetString("GPOS_P_BaseRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4103: The ChainContextPos subtable is valid.
        /// </summary>
        internal static string GPOS_P_ChainContextPos {
            get {
                return ResourceManager.GetString("GPOS_P_ChainContextPos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4104: The ChainPosClassRule table is valid.
        /// </summary>
        internal static string GPOS_P_ChainPosClassRule {
            get {
                return ResourceManager.GetString("GPOS_P_ChainPosClassRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4105: The ChainPosClassSet table is valid.
        /// </summary>
        internal static string GPOS_P_ChainPosClassSet {
            get {
                return ResourceManager.GetString("GPOS_P_ChainPosClassSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4106: The ChainPosRule table is valid.
        /// </summary>
        internal static string GPOS_P_ChainPosRule {
            get {
                return ResourceManager.GetString("GPOS_P_ChainPosRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4107: The ChainPosRuleSet table is valid.
        /// </summary>
        internal static string GPOS_P_ChainPosRuleSet {
            get {
                return ResourceManager.GetString("GPOS_P_ChainPosRuleSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4108: The Class1Record is valid.
        /// </summary>
        internal static string GPOS_P_Class1Record {
            get {
                return ResourceManager.GetString("GPOS_P_Class1Record", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4109: The Class2Record is valid.
        /// </summary>
        internal static string GPOS_P_Class2Record {
            get {
                return ResourceManager.GetString("GPOS_P_Class2Record", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4110: The ComponentRecord is valid.
        /// </summary>
        internal static string GPOS_P_ComponentRecord {
            get {
                return ResourceManager.GetString("GPOS_P_ComponentRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4111: The ContextPos subtable is valid.
        /// </summary>
        internal static string GPOS_P_ContextPos {
            get {
                return ResourceManager.GetString("GPOS_P_ContextPos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4112: The CursivePos subtable is valid.
        /// </summary>
        internal static string GPOS_P_CursivePos {
            get {
                return ResourceManager.GetString("GPOS_P_CursivePos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4113: The EntryExit record is valid.
        /// </summary>
        internal static string GPOS_P_EntryExit {
            get {
                return ResourceManager.GetString("GPOS_P_EntryExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4114: The ExtensiontPos subtable is valid.
        /// </summary>
        internal static string GPOS_P_ExtensionPos {
            get {
                return ResourceManager.GetString("GPOS_P_ExtensionPos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4115: All header offsets point within the table.
        /// </summary>
        internal static string GPOS_P_HeaderOffsets {
            get {
                return ResourceManager.GetString("GPOS_P_HeaderOffsets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4116: The LigatureArray table is valid.
        /// </summary>
        internal static string GPOS_P_LigatureArrayTable {
            get {
                return ResourceManager.GetString("GPOS_P_LigatureArrayTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4117: The LigatureAttach table is valid.
        /// </summary>
        internal static string GPOS_P_LigatureAttachTable {
            get {
                return ResourceManager.GetString("GPOS_P_LigatureAttachTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4118: The Mark2Array table is valid.
        /// </summary>
        internal static string GPOS_P_Mark2ArrayTable {
            get {
                return ResourceManager.GetString("GPOS_P_Mark2ArrayTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4119: The Mark2Record is valid.
        /// </summary>
        internal static string GPOS_P_Mark2Record {
            get {
                return ResourceManager.GetString("GPOS_P_Mark2Record", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4120: The MarkArray table is valid.
        /// </summary>
        internal static string GPOS_P_MarkArrayTable {
            get {
                return ResourceManager.GetString("GPOS_P_MarkArrayTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4121: The MarkBasePos subtable is valid.
        /// </summary>
        internal static string GPOS_P_MarkBasePos {
            get {
                return ResourceManager.GetString("GPOS_P_MarkBasePos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4122: The MarkLigPos subtable is valid.
        /// </summary>
        internal static string GPOS_P_MarkLigPos {
            get {
                return ResourceManager.GetString("GPOS_P_MarkLigPos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4123: The MarkMarkPos subtable is valid.
        /// </summary>
        internal static string GPOS_P_MarkMarkPos {
            get {
                return ResourceManager.GetString("GPOS_P_MarkMarkPos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4124: The PairPos subtable is valid.
        /// </summary>
        internal static string GPOS_P_PairPos {
            get {
                return ResourceManager.GetString("GPOS_P_PairPos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4125: The PairSet table is valid.
        /// </summary>
        internal static string GPOS_P_PairSet {
            get {
                return ResourceManager.GetString("GPOS_P_PairSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4127: The PosClassSet table is valid.
        /// </summary>
        internal static string GPOS_P_PosClassSet {
            get {
                return ResourceManager.GetString("GPOS_P_PosClassSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4128: The PosRule table is valid.
        /// </summary>
        internal static string GPOS_P_PosRule {
            get {
                return ResourceManager.GetString("GPOS_P_PosRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4129: The PosRuleSet table is valid.
        /// </summary>
        internal static string GPOS_P_PosRuleSet {
            get {
                return ResourceManager.GetString("GPOS_P_PosRuleSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4130: The SinglePos subtable is valid.
        /// </summary>
        internal static string GPOS_P_SinglePos {
            get {
                return ResourceManager.GetString("GPOS_P_SinglePos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4131: The ValueRecord subtable is valid.
        /// </summary>
        internal static string GPOS_P_ValueRecord {
            get {
                return ResourceManager.GetString("GPOS_P_ValueRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4132: The version number is 0x00010000.
        /// </summary>
        internal static string GPOS_P_Version {
            get {
                return ResourceManager.GetString("GPOS_P_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4201: The array extends past the end of the GSUB table.
        /// </summary>
        internal static string GSUB_E_Array_pastEOT {
            get {
                return ResourceManager.GetString("GSUB_E_Array_pastEOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4202: The extension lookup type is invalid.
        /// </summary>
        internal static string GSUB_E_ExtensionLookupType {
            get {
                return ResourceManager.GetString("GSUB_E_ExtensionLookupType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4203: A header offset doesn&apos;t point within the table.
        /// </summary>
        internal static string GSUB_E_HeaderOffset {
            get {
                return ResourceManager.GetString("GSUB_E_HeaderOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4204: A header offset has a value of 0.
        /// </summary>
        internal static string GSUB_E_HeaderOffset_0 {
            get {
                return ResourceManager.GetString("GSUB_E_HeaderOffset_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4205: An offset points past the end of the GSUB table.
        /// </summary>
        internal static string GSUB_E_Offset_PastEOT {
            get {
                return ResourceManager.GetString("GSUB_E_Offset_PastEOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4206: The SubstLookupRecord SequenceIndex is greater than the Input sequence size.
        /// </summary>
        internal static string GSUB_E_SubstLookupRecord_SequenceIndex {
            get {
                return ResourceManager.GetString("GSUB_E_SubstLookupRecord_SequenceIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4207: The subtable format value is invalid.
        /// </summary>
        internal static string GSUB_E_SubtableFormat {
            get {
                return ResourceManager.GetString("GSUB_E_SubtableFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4208: The version number is not 0x00010000.
        /// </summary>
        internal static string GSUB_E_Version {
            get {
                return ResourceManager.GetString("GSUB_E_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4200: The AlternateSubst subtable is valid.
        /// </summary>
        internal static string GSUB_P_AlternateSubst {
            get {
                return ResourceManager.GetString("GSUB_P_AlternateSubst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4201: The ChainContextSubst subtable is valid.
        /// </summary>
        internal static string GSUB_P_ChainContextSubst {
            get {
                return ResourceManager.GetString("GSUB_P_ChainContextSubst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4202: The ContextSubst subtable is valid.
        /// </summary>
        internal static string GSUB_P_ContextSubst {
            get {
                return ResourceManager.GetString("GSUB_P_ContextSubst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4203: The ExtensionSubst subtable is valid.
        /// </summary>
        internal static string GSUB_P_ExtensionSubst {
            get {
                return ResourceManager.GetString("GSUB_P_ExtensionSubst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4204: All header offsets point within the table.
        /// </summary>
        internal static string GSUB_P_HeaderOffsets {
            get {
                return ResourceManager.GetString("GSUB_P_HeaderOffsets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4205: The LigatureSubst subtable is valid.
        /// </summary>
        internal static string GSUB_P_LigatureSubst {
            get {
                return ResourceManager.GetString("GSUB_P_LigatureSubst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4206: The MultipleSubst subtable is valid.
        /// </summary>
        internal static string GSUB_P_MultipleSubst {
            get {
                return ResourceManager.GetString("GSUB_P_MultipleSubst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4209: The ReverseChainSingleSubst subtable is valid.
        /// </summary>
        internal static string GSUB_P_ReverseChainContextSubst {
            get {
                return ResourceManager.GetString("GSUB_P_ReverseChainContextSubst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4207: The SingleSubst subtable is valid.
        /// </summary>
        internal static string GSUB_P_SingleSubst {
            get {
                return ResourceManager.GetString("GSUB_P_SingleSubst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4208: The version number is 0x00010000.
        /// </summary>
        internal static string GSUB_P_Version {
            get {
                return ResourceManager.GetString("GSUB_P_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1200: The DeviceRecord padding bytes are not 0.
        /// </summary>
        internal static string hdmx_E_DeviceRecordPadBytes_nonzero {
            get {
                return ResourceManager.GetString("hdmx_E_DeviceRecordPadBytes_nonzero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1201: There are duplicate DeviceRecords.
        /// </summary>
        internal static string hdmx_E_DuplicateDeviceRecords {
            get {
                return ResourceManager.GetString("hdmx_E_DuplicateDeviceRecords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1209: The number of device records is negative.
        /// </summary>
        internal static string hdmx_E_NumDeviceRecords_neg {
            get {
                return ResourceManager.GetString("hdmx_E_NumDeviceRecords_neg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1202: The hdmx widths can&apos;t be validated due to an error while rasterizing the glyphs, likely a hinting instruction error.
        /// </summary>
        internal static string hdmx_E_Rasterizer {
            get {
                return ResourceManager.GetString("hdmx_E_Rasterizer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1203: The SizeofDeviceRecord is not long aligned.
        /// </summary>
        internal static string hdmx_E_SizeofDeviceRecord_alignment {
            get {
                return ResourceManager.GetString("hdmx_E_SizeofDeviceRecord_alignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1204: The SizeofDeviceRecord doesn&apos;t match the calculated value.
        /// </summary>
        internal static string hdmx_E_SizeofDeviceRecord_numGlyphs {
            get {
                return ResourceManager.GetString("hdmx_E_SizeofDeviceRecord_numGlyphs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1205: The DeviceRecords are not sorted in ascending order.
        /// </summary>
        internal static string hdmx_E_SortedOrder {
            get {
                return ResourceManager.GetString("hdmx_E_SortedOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1208: The table length is incorrect.
        /// </summary>
        internal static string hdmx_E_TableLength {
            get {
                return ResourceManager.GetString("hdmx_E_TableLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1206: The version number is not 0.
        /// </summary>
        internal static string hdmx_E_Version {
            get {
                return ResourceManager.GetString("hdmx_E_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1207: The hdmx width doesn&apos;t match the calculated width.
        /// </summary>
        internal static string hdmx_E_Widths {
            get {
                return ResourceManager.GetString("hdmx_E_Widths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1200: There are no DeviceRecord padding bytes.
        /// </summary>
        internal static string hdmx_P_DeviceRecordPadBytes_none {
            get {
                return ResourceManager.GetString("hdmx_P_DeviceRecordPadBytes_none", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1201: The DeviceRecord padding bytes are 0.
        /// </summary>
        internal static string hdmx_P_DeviceRecordPadBytes_zero {
            get {
                return ResourceManager.GetString("hdmx_P_DeviceRecordPadBytes_zero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1202: There are no duplicate DeviceRecords.
        /// </summary>
        internal static string hdmx_P_DuplicateDeviceRecords {
            get {
                return ResourceManager.GetString("hdmx_P_DuplicateDeviceRecords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1208: The number of device records is non-negative.
        /// </summary>
        internal static string hdmx_P_NumDeviceRecords {
            get {
                return ResourceManager.GetString("hdmx_P_NumDeviceRecords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1203: The SizeofDeviceRecord matches the calculated value.
        /// </summary>
        internal static string hdmx_P_SizeofDeviceRecord {
            get {
                return ResourceManager.GetString("hdmx_P_SizeofDeviceRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1204: The DeviceRecords are sorted in ascending order.
        /// </summary>
        internal static string hdmx_P_SortedOrder {
            get {
                return ResourceManager.GetString("hdmx_P_SortedOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1207: The table length is correct.
        /// </summary>
        internal static string hdmx_P_TableLength {
            get {
                return ResourceManager.GetString("hdmx_P_TableLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1205: The version number is 0.
        /// </summary>
        internal static string hdmx_P_Version {
            get {
                return ResourceManager.GetString("hdmx_P_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1206: The hdmx widths match the calculated widths.
        /// </summary>
        internal static string hdmx_P_Widths {
            get {
                return ResourceManager.GetString("hdmx_P_Widths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1200: The Freetype version is too old.
        /// </summary>
        internal static string hdmx_W_Need_Newer_FreeType {
            get {
                return ResourceManager.GetString("hdmx_W_Need_Newer_FreeType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1300: The created time is not valid.
        /// </summary>
        internal static string head_E_created_invalid {
            get {
                return ResourceManager.GetString("head_E_created_invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1301: Reserved bit 14 of the flags field is set.
        /// </summary>
        internal static string head_E_flags_bit14 {
            get {
                return ResourceManager.GetString("head_E_flags_bit14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1302: Reserved bit 15 of the flags field is set.
        /// </summary>
        internal static string head_E_flags_bit15 {
            get {
                return ResourceManager.GetString("head_E_flags_bit15", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1303: Non-linear scaling flag (bit 4) is clear, but hdmx table is present.
        /// </summary>
        internal static string head_E_flags_bit4_0_hdmx {
            get {
                return ResourceManager.GetString("head_E_flags_bit4_0_hdmx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1304: Non-linear scaling flag (bit 4) is clear, but LTSH table is present.
        /// </summary>
        internal static string head_E_flags_bit4_0_LTSH {
            get {
                return ResourceManager.GetString("head_E_flags_bit4_0_LTSH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1305: Font checksum is incorrect.
        /// </summary>
        internal static string head_E_FontChecksum {
            get {
                return ResourceManager.GetString("head_E_FontChecksum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1306: The fontDirectionHint is not in the range -2..2.
        /// </summary>
        internal static string head_E_fontDirectionHint {
            get {
                return ResourceManager.GetString("head_E_fontDirectionHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1307: The glyphDataFormat value is not 0.
        /// </summary>
        internal static string head_E_glyphDataFormat {
            get {
                return ResourceManager.GetString("head_E_glyphDataFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1308: The indexToLocFormat value does not match the loca table.
        /// </summary>
        internal static string head_E_indexToLocFormat_match {
            get {
                return ResourceManager.GetString("head_E_indexToLocFormat_match", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1309: The indexToLocFormat value is not 0 or 1.
        /// </summary>
        internal static string head_E_indexToLocFormat_range {
            get {
                return ResourceManager.GetString("head_E_indexToLocFormat_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1310: The lowestRecPPEM value is zero.
        /// </summary>
        internal static string head_E_lowestRecPPEM_zero {
            get {
                return ResourceManager.GetString("head_E_lowestRecPPEM_zero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1311: The macStyle bold bit doesn&apos;t match the name table&apos;s font subfamily string.
        /// </summary>
        internal static string head_E_macStyleBold_subfamily {
            get {
                return ResourceManager.GetString("head_E_macStyleBold_subfamily", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1312: The macStyle bold bit is clear, but the OS/2 fsSelection bold bit is set.
        /// </summary>
        internal static string head_E_macStyleBold0_OS2 {
            get {
                return ResourceManager.GetString("head_E_macStyleBold0_OS2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1313: The macStyle bold bit is set, but the OS/2 fsSelection bold bit is clear.
        /// </summary>
        internal static string head_E_macStyleBold1_OS2 {
            get {
                return ResourceManager.GetString("head_E_macStyleBold1_OS2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1314: The macStyle italic bit doesn&apos;t match the name table&apos;s font subfamily string.
        /// </summary>
        internal static string head_E_macStyleItal_subfamily {
            get {
                return ResourceManager.GetString("head_E_macStyleItal_subfamily", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1315: The macStyle italic bit is clear, but the OS/2 fsSelection italic bit is set.
        /// </summary>
        internal static string head_E_macStyleItal0_OS2 {
            get {
                return ResourceManager.GetString("head_E_macStyleItal0_OS2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1316: The macStyle italic bit is clear, but the post table italic angle is nonzero.
        /// </summary>
        internal static string head_E_macStyleItal0_post {
            get {
                return ResourceManager.GetString("head_E_macStyleItal0_post", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1317: The macStyle italic bit is set, but the OS/2 fsSelection italic bit is clear.
        /// </summary>
        internal static string head_E_macStyleItal1_OS2 {
            get {
                return ResourceManager.GetString("head_E_macStyleItal1_OS2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1318: The macStyle italic bit is set, but the post table italic angle is zero.
        /// </summary>
        internal static string head_E_macStyleItal1_post {
            get {
                return ResourceManager.GetString("head_E_macStyleItal1_post", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1319: The magic number is not 0x5f0f3cf5.
        /// </summary>
        internal static string head_E_MagicNumber {
            get {
                return ResourceManager.GetString("head_E_MagicNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1320: The modified time is not valid.
        /// </summary>
        internal static string head_E_modified_invalid {
            get {
                return ResourceManager.GetString("head_E_modified_invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1321: Table length is not 54 bytes.
        /// </summary>
        internal static string head_E_TableLength {
            get {
                return ResourceManager.GetString("head_E_TableLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1322: The table version number is not 0x00010000.
        /// </summary>
        internal static string head_E_TableVersion {
            get {
                return ResourceManager.GetString("head_E_TableVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1323: The unitsPerEm is greater than 16384.
        /// </summary>
        internal static string head_E_unitsPerEM_GT16384 {
            get {
                return ResourceManager.GetString("head_E_unitsPerEM_GT16384", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1324: The unitsPerEm is less than 16.
        /// </summary>
        internal static string head_E_unitsPerEm_LT16 {
            get {
                return ResourceManager.GetString("head_E_unitsPerEm_LT16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1325: The xMax value does not match the maximum glyph xMax.
        /// </summary>
        internal static string head_E_xMax_glyf {
            get {
                return ResourceManager.GetString("head_E_xMax_glyf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1326: The xMin value does not match the minimum glyph xMin.
        /// </summary>
        internal static string head_E_xMin_glyf {
            get {
                return ResourceManager.GetString("head_E_xMin_glyf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1327: xMin is greater than xMax.
        /// </summary>
        internal static string head_E_xMin_GT_xMax {
            get {
                return ResourceManager.GetString("head_E_xMin_GT_xMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1328: The yMax value does not match the maximum glyph yMax.
        /// </summary>
        internal static string head_E_yMax_glyf {
            get {
                return ResourceManager.GetString("head_E_yMax_glyf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1329: The yMin value does not match the minimum glyph yMin.
        /// </summary>
        internal static string head_E_yMin_glyf {
            get {
                return ResourceManager.GetString("head_E_yMin_glyf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1330: yMin is greater than yMax.
        /// </summary>
        internal static string head_E_yMin_GT_yMax {
            get {
                return ResourceManager.GetString("head_E_yMin_GT_yMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1300: The created time is not zero.
        /// </summary>
        internal static string head_P_created_0 {
            get {
                return ResourceManager.GetString("head_P_created_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1301: Reserved bit 14 of the flags field is clear.
        /// </summary>
        internal static string head_P_flags_bit14 {
            get {
                return ResourceManager.GetString("head_P_flags_bit14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1302: Reserved bit 15 of the flags field is clear.
        /// </summary>
        internal static string head_P_flags_bit15 {
            get {
                return ResourceManager.GetString("head_P_flags_bit15", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1303: Non-linear scaling flag (bit 4) is clear, and hdmx table is not present.
        /// </summary>
        internal static string head_P_flags_bit4_0_hdmx {
            get {
                return ResourceManager.GetString("head_P_flags_bit4_0_hdmx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1304: Non-linear scaling flag (bit 4) is clear, and LTSH table is not present.
        /// </summary>
        internal static string head_P_flags_bit4_0_LTSH {
            get {
                return ResourceManager.GetString("head_P_flags_bit4_0_LTSH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1305: Non-linear scaling flag (bit 4) is set, and hdmx table is present.
        /// </summary>
        internal static string head_P_flags_bit4_1_hdmx {
            get {
                return ResourceManager.GetString("head_P_flags_bit4_1_hdmx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1306: Non-linear scaling flag (bit 4) is set, and LTSH table is present.
        /// </summary>
        internal static string head_P_flags_bit4_1_LTSH {
            get {
                return ResourceManager.GetString("head_P_flags_bit4_1_LTSH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1307: Font checksum is correct.
        /// </summary>
        internal static string head_P_FontChecksum {
            get {
                return ResourceManager.GetString("head_P_FontChecksum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1308: The fontDirectionHint is in the range -2..2.
        /// </summary>
        internal static string head_P_fontDirectionHint {
            get {
                return ResourceManager.GetString("head_P_fontDirectionHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1330: fontRevision is consistent with the font&apos;s version string.
        /// </summary>
        internal static string head_P_fontRevision {
            get {
                return ResourceManager.GetString("head_P_fontRevision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1309: The glyphDataFormat value is 0.
        /// </summary>
        internal static string head_P_glyphDataFormat {
            get {
                return ResourceManager.GetString("head_P_glyphDataFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1310: The indexToLocFormat value is ignored in a CFF font.
        /// </summary>
        internal static string head_P_indexToLocFormat_ignore {
            get {
                return ResourceManager.GetString("head_P_indexToLocFormat_ignore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1311: The indexToLocFormat value matches the loca table.
        /// </summary>
        internal static string head_P_indexToLocFormat_match {
            get {
                return ResourceManager.GetString("head_P_indexToLocFormat_match", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1312: The indexToLocFormat value is 0 or 1.
        /// </summary>
        internal static string head_P_indexToLocFormat_range {
            get {
                return ResourceManager.GetString("head_P_indexToLocFormat_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1313: The lowestRecPPEM value is in a reasonable range.
        /// </summary>
        internal static string head_P_lowestRecPPEM {
            get {
                return ResourceManager.GetString("head_P_lowestRecPPEM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1314: The macStyle bold bit matches the OS/2 fsSelection bit.
        /// </summary>
        internal static string head_P_macStyleBold_OS2 {
            get {
                return ResourceManager.GetString("head_P_macStyleBold_OS2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1316: The macStyle bold bit matches the name table&apos;s font subfamily string.
        /// </summary>
        internal static string head_P_macStyleBold_subfamily {
            get {
                return ResourceManager.GetString("head_P_macStyleBold_subfamily", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1318: The macStyle italic bit matches the OS/2 fsSelection bit.
        /// </summary>
        internal static string head_P_macStyleItal_OS2 {
            get {
                return ResourceManager.GetString("head_P_macStyleItal_OS2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1319: The macStyle italic bit matches the post table italic angle.
        /// </summary>
        internal static string head_P_macStyleItal_post {
            get {
                return ResourceManager.GetString("head_P_macStyleItal_post", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1320: The macStyle italic bit matches the name table&apos;s font subfamily string.
        /// </summary>
        internal static string head_P_macStyleItal_subfamily {
            get {
                return ResourceManager.GetString("head_P_macStyleItal_subfamily", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1321: The magic number is 0x5f0f3cf5.
        /// </summary>
        internal static string head_P_MagicNumber {
            get {
                return ResourceManager.GetString("head_P_MagicNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1322: The modified time is not zero.
        /// </summary>
        internal static string head_P_modified_0 {
            get {
                return ResourceManager.GetString("head_P_modified_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1323: Table length is 54 bytes.
        /// </summary>
        internal static string head_P_TableLength {
            get {
                return ResourceManager.GetString("head_P_TableLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1324: The table version number is 0x00010000.
        /// </summary>
        internal static string head_P_TableVersion {
            get {
                return ResourceManager.GetString("head_P_TableVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1325: The unitsPerEm value is a power of two in the range 64..16384.
        /// </summary>
        internal static string head_P_unitsPerEm {
            get {
                return ResourceManager.GetString("head_P_unitsPerEm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1326: The xMax value matches the maximum glyph xMax.
        /// </summary>
        internal static string head_P_xMax_glyf {
            get {
                return ResourceManager.GetString("head_P_xMax_glyf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1327: The xMin value matches the minimum glyph xMin.
        /// </summary>
        internal static string head_P_xMin_glyf {
            get {
                return ResourceManager.GetString("head_P_xMin_glyf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1328: The yMax value matches the maximum glyph yMax.
        /// </summary>
        internal static string head_P_yMax_glyf {
            get {
                return ResourceManager.GetString("head_P_yMax_glyf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1329: The yMin value matches the minimum glyph yMin.
        /// </summary>
        internal static string head_P_yMin_glyf {
            get {
                return ResourceManager.GetString("head_P_yMin_glyf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1300: The created time is zero.
        /// </summary>
        internal static string head_W_created_0 {
            get {
                return ResourceManager.GetString("head_W_created_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1301: The created time is an unlikely value.
        /// </summary>
        internal static string head_W_created_unlikely {
            get {
                return ResourceManager.GetString("head_W_created_unlikely", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1302: Non-linear scaling flag (bit 4) is set, but hdmx table is not present.
        /// </summary>
        internal static string head_W_flags_bit4_1_hdmx {
            get {
                return ResourceManager.GetString("head_W_flags_bit4_1_hdmx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1303: Non-linear scaling flag (bit 4) is set, but LTSH table is not present.
        /// </summary>
        internal static string head_W_flags_bit4_1_LTSH {
            get {
                return ResourceManager.GetString("head_W_flags_bit4_1_LTSH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1314: fontRevision is not consistent with the font&apos;s version string.
        /// </summary>
        internal static string head_W_fontRevision {
            get {
                return ResourceManager.GetString("head_W_fontRevision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1304: The lowestRecPPEM value may be unreasonably large.
        /// </summary>
        internal static string head_W_lowestRecPPEM_large {
            get {
                return ResourceManager.GetString("head_W_lowestRecPPEM_large", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1305: The lowestRecPPEM value may be unreasonably small.
        /// </summary>
        internal static string head_W_lowestRecPPEM_small {
            get {
                return ResourceManager.GetString("head_W_lowestRecPPEM_small", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1310: The modified time is zero.
        /// </summary>
        internal static string head_W_modified_0 {
            get {
                return ResourceManager.GetString("head_W_modified_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1311: The modified time is an unlikely value.
        /// </summary>
        internal static string head_W_modified_unlikely {
            get {
                return ResourceManager.GetString("head_W_modified_unlikely", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1312: The unitsPerEm is less than 64 which is in violation of the Apple spec.
        /// </summary>
        internal static string head_W_unitsPerEM_LT64 {
            get {
                return ResourceManager.GetString("head_W_unitsPerEM_LT64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1313: The unitsPerEm value is not a power of two.
        /// </summary>
        internal static string head_W_unitsPerEm_Pow2 {
            get {
                return ResourceManager.GetString("head_W_unitsPerEm_Pow2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1400: The advanceWidthMax field does not equal the calculated value.
        /// </summary>
        internal static string hhea_E_advanceWidthMax {
            get {
                return ResourceManager.GetString("hhea_E_advanceWidthMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1414: The Ascender value must be greater than zero.
        /// </summary>
        internal static string hhea_E_AscenderPositive {
            get {
                return ResourceManager.GetString("hhea_E_AscenderPositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1411: The caretSlopeRise/caretSlopeRun angle does not match the post.italicAngle.
        /// </summary>
        internal static string hhea_E_caretSlopeAngle_italicAngle {
            get {
                return ResourceManager.GetString("hhea_E_caretSlopeAngle_italicAngle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1412: The caretSlopeRun is nonzero, but the post.italicAngle is zero.
        /// </summary>
        internal static string hhea_E_caretSlopeRunNonZero_italicAngle {
            get {
                return ResourceManager.GetString("hhea_E_caretSlopeRunNonZero_italicAngle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1413: The caretSlopeRun is zero, but the post.italicAngle is nonzero.
        /// </summary>
        internal static string hhea_E_caretSlopeRunZero_italicAngle {
            get {
                return ResourceManager.GetString("hhea_E_caretSlopeRunZero_italicAngle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1415: The Descender value must be less than zero.
        /// </summary>
        internal static string hhea_E_DescenderNegative {
            get {
                return ResourceManager.GetString("hhea_E_DescenderNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1401: The metricDataFormat field is not set to zero.
        /// </summary>
        internal static string hhea_E_metricDataFormat {
            get {
                return ResourceManager.GetString("hhea_E_metricDataFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1402: The minLeftSideBearing field does not equal the calculated value.
        /// </summary>
        internal static string hhea_E_minLeftSideBearing {
            get {
                return ResourceManager.GetString("hhea_E_minLeftSideBearing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1403: The minRightSideBearing field does not equal the calculated value.
        /// </summary>
        internal static string hhea_E_minRightSideBearing {
            get {
                return ResourceManager.GetString("hhea_E_minRightSideBearing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1404: The numberOfHMetrics value is not consistent with the length of the hmtx table.
        /// </summary>
        internal static string hhea_E_numberOfHMetrics {
            get {
                return ResourceManager.GetString("hhea_E_numberOfHMetrics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1405: Reserved field # 1 is non-zero.
        /// </summary>
        internal static string hhea_E_reserved1 {
            get {
                return ResourceManager.GetString("hhea_E_reserved1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1406: Reserved field # 2 is non-zero.
        /// </summary>
        internal static string hhea_E_reserved2 {
            get {
                return ResourceManager.GetString("hhea_E_reserved2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1407: Reserved field # 3 is non-zero.
        /// </summary>
        internal static string hhea_E_reserved3 {
            get {
                return ResourceManager.GetString("hhea_E_reserved3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1408: Reserved field # 4 is non-zero.
        /// </summary>
        internal static string hhea_E_reserved4 {
            get {
                return ResourceManager.GetString("hhea_E_reserved4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1409: The table version number is not 0x00010000.
        /// </summary>
        internal static string hhea_E_version {
            get {
                return ResourceManager.GetString("hhea_E_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1410: The xMaxExtent field does not equal the calculated value.
        /// </summary>
        internal static string hhea_E_xMaxExtent {
            get {
                return ResourceManager.GetString("hhea_E_xMaxExtent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I1401: Ascender should be less than or equal to head.yMax.
        /// </summary>
        internal static string hhea_I_Ascender_yMax {
            get {
                return ResourceManager.GetString("hhea_I_Ascender_yMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I1402: Descender should be greater than or equal to head.yMin.
        /// </summary>
        internal static string hhea_I_Descender_yMin {
            get {
                return ResourceManager.GetString("hhea_I_Descender_yMin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1400: The advanceWidthMax field equals the calculated value.
        /// </summary>
        internal static string hhea_P_advanceWidthMax {
            get {
                return ResourceManager.GetString("hhea_P_advanceWidthMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1415: Ascender is same value as OS/2.usWinAscent.
        /// </summary>
        internal static string hhea_P_Ascender_usWinAscent {
            get {
                return ResourceManager.GetString("hhea_P_Ascender_usWinAscent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1410: Ascender is less than or equal to head.yMax.
        /// </summary>
        internal static string hhea_P_Ascender_yMax {
            get {
                return ResourceManager.GetString("hhea_P_Ascender_yMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1409: The Ascender value is greater than zero.
        /// </summary>
        internal static string hhea_P_AscenderPositive {
            get {
                return ResourceManager.GetString("hhea_P_AscenderPositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1408: The caretSlope angle matches the post.italicAngle.
        /// </summary>
        internal static string hhea_P_caretSlopeAngle_italicAngle {
            get {
                return ResourceManager.GetString("hhea_P_caretSlopeAngle_italicAngle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1416: Descender value is the same as OS/2.usWinDescent.
        /// </summary>
        internal static string hhea_P_Descender_usWinDescent {
            get {
                return ResourceManager.GetString("hhea_P_Descender_usWinDescent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1412: Descender is greater than or equal to head.yMin.
        /// </summary>
        internal static string hhea_P_Descender_yMin {
            get {
                return ResourceManager.GetString("hhea_P_Descender_yMin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1411: The Descender is less than zero.
        /// </summary>
        internal static string hhea_P_DescenderNegative {
            get {
                return ResourceManager.GetString("hhea_P_DescenderNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1414: The LineGap is greater to or equal the minimum recommended value.
        /// </summary>
        internal static string hhea_P_LineGap_minGap {
            get {
                return ResourceManager.GetString("hhea_P_LineGap_minGap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1413: LineGap is greater than or equal to 0.
        /// </summary>
        internal static string hhea_P_LineGapPositive {
            get {
                return ResourceManager.GetString("hhea_P_LineGapPositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1401: The metricDataFormat field is set to zero.
        /// </summary>
        internal static string hhea_P_metricDataFormat {
            get {
                return ResourceManager.GetString("hhea_P_metricDataFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1402: The minLeftSideBearing field equals the calculated value.
        /// </summary>
        internal static string hhea_P_minLeftSideBearing {
            get {
                return ResourceManager.GetString("hhea_P_minLeftSideBearing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1403: The minRightSideBearing field equals the calculated value.
        /// </summary>
        internal static string hhea_P_minRightSideBearing {
            get {
                return ResourceManager.GetString("hhea_P_minRightSideBearing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1404: The numberOfHMetrics value is consistent with the length of the hmtx table.
        /// </summary>
        internal static string hhea_P_numberOfHMetrics {
            get {
                return ResourceManager.GetString("hhea_P_numberOfHMetrics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1405: The reserved fields are all set to zero.
        /// </summary>
        internal static string hhea_P_reserved {
            get {
                return ResourceManager.GetString("hhea_P_reserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1406: The table version number is 0x00010000.
        /// </summary>
        internal static string hhea_P_version {
            get {
                return ResourceManager.GetString("hhea_P_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1407: The xMaxExtent field equals the calculated value.
        /// </summary>
        internal static string hhea_P_xMaxExtent {
            get {
                return ResourceManager.GetString("hhea_P_xMaxExtent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1405: Ascender is different than OS/2.usWinAscent. Different line heights on Windows and Apple.
        /// </summary>
        internal static string hhea_W_Ascender_usWinAscent {
            get {
                return ResourceManager.GetString("hhea_W_Ascender_usWinAscent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1406: Descender is different than OS/2.usWinDescent. Different line heights on Windows and Apple.
        /// </summary>
        internal static string hhea_W_Descender_usWinDescent {
            get {
                return ResourceManager.GetString("hhea_W_Descender_usWinDescent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1400: The advanceWidthMax, minLeftSideBearing, minRightSideBearing, and xMaxExtent fields can not be validated.
        /// </summary>
        internal static string hhea_W_hmtx_invalid {
            get {
                return ResourceManager.GetString("hhea_W_hmtx_invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1404: The LineGap value is less than the recommended value.
        /// </summary>
        internal static string hhea_W_LineGap_minGap {
            get {
                return ResourceManager.GetString("hhea_W_LineGap_minGap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1403: LineGap value is less than 0 (unlikely value).
        /// </summary>
        internal static string hhea_W_LineGapPositive {
            get {
                return ResourceManager.GetString("hhea_W_LineGapPositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1500: The size of the table does not match the calculated size.
        /// </summary>
        internal static string hmtx_E_TableSize {
            get {
                return ResourceManager.GetString("hmtx_E_TableSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1500: The horizontal metrics are all within an allowable range of values.
        /// </summary>
        internal static string hmtx_P_CheckMetrics {
            get {
                return ResourceManager.GetString("hmtx_P_CheckMetrics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1501: The size of the table matches the calculated size.
        /// </summary>
        internal static string hmtx_P_TableSize {
            get {
                return ResourceManager.GetString("hmtx_P_TableSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1500: The leftSideBearing is greater than the advance width (unlikely value).
        /// </summary>
        internal static string hmtx_W_CheckMetrics_lsb_gt_adv {
            get {
                return ResourceManager.GetString("hmtx_W_CheckMetrics_lsb_gt_adv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4400: The array order is incorrect.
        /// </summary>
        internal static string JSTF_E_Array_order {
            get {
                return ResourceManager.GetString("JSTF_E_Array_order", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4401: The array extends past the end of the JSTF table.
        /// </summary>
        internal static string JSTF_E_Array_pastEOT {
            get {
                return ResourceManager.GetString("JSTF_E_Array_pastEOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4402: An offset points past the end of the JSTF table.
        /// </summary>
        internal static string JSTF_E_Offset_PastEOT {
            get {
                return ResourceManager.GetString("JSTF_E_Offset_PastEOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4403: The tag is invalid.
        /// </summary>
        internal static string JSTF_E_tag {
            get {
                return ResourceManager.GetString("JSTF_E_tag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E4404: The version number is not 0x00010000.
        /// </summary>
        internal static string JSTF_E_Version {
            get {
                return ResourceManager.GetString("JSTF_E_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P4400: The version number is 0x00010000.
        /// </summary>
        internal static string JSTF_P_Version {
            get {
                return ResourceManager.GetString("JSTF_P_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1600: The subtable&apos;s entrySelector value does not match the calculated value.
        /// </summary>
        internal static string kern_E_Format0_entrySelector {
            get {
                return ResourceManager.GetString("kern_E_Format0_entrySelector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1611: A kern pair has a glyph ID that is not mapped in the cmap table.
        /// </summary>
        internal static string kern_E_Format0_GlyphIdInCmap {
            get {
                return ResourceManager.GetString("kern_E_Format0_GlyphIdInCmap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1609: A glyph id is invalid.
        /// </summary>
        internal static string kern_E_Format0_GlyphIDs {
            get {
                return ResourceManager.GetString("kern_E_Format0_GlyphIDs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1601: The subtable&apos;s rangeShift value does not match the calculated value.
        /// </summary>
        internal static string kern_E_Format0_rangeShift {
            get {
                return ResourceManager.GetString("kern_E_Format0_rangeShift", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1602: The subtable&apos;s searchRange value does not match the calculated value.
        /// </summary>
        internal static string kern_E_Format0_searchRange {
            get {
                return ResourceManager.GetString("kern_E_Format0_searchRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1610: The kerning value is invalid .
        /// </summary>
        internal static string kern_E_Format0_Values {
            get {
                return ResourceManager.GetString("kern_E_Format0_Values", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1603: The number of subtables is 0.
        /// </summary>
        internal static string kern_E_NumSubTables {
            get {
                return ResourceManager.GetString("kern_E_NumSubTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1604: A subtable has reserved coverage bits that are set.
        /// </summary>
        internal static string kern_E_ReservedCoverageBits {
            get {
                return ResourceManager.GetString("kern_E_ReservedCoverageBits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1608: The subtable extends past the end of the table.
        /// </summary>
        internal static string kern_E_SubTableExtendsPastEOT {
            get {
                return ResourceManager.GetString("kern_E_SubTableExtendsPastEOT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1605: A subtable was found which was not 0 or 2.
        /// </summary>
        internal static string kern_E_SubtableFormats {
            get {
                return ResourceManager.GetString("kern_E_SubtableFormats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1606: The subtable&apos;s length did not match the calculated length.
        /// </summary>
        internal static string kern_E_SubtableLength {
            get {
                return ResourceManager.GetString("kern_E_SubtableLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1607: The table version was not 0.
        /// </summary>
        internal static string kern_E_TableVersion {
            get {
                return ResourceManager.GetString("kern_E_TableVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1608: Every kern pair in the format 0 subtable has its glyph IDs mapped in the cmap table.
        /// </summary>
        internal static string kern_P_Format0_GlyphIdInCmap {
            get {
                return ResourceManager.GetString("kern_P_Format0_GlyphIdInCmap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1606: All the glyph IDs in the format 0 subtable are in a valid range.
        /// </summary>
        internal static string kern_P_Format0_GlyphIDs {
            get {
                return ResourceManager.GetString("kern_P_Format0_GlyphIDs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1600: All subtables&apos; searchRange, entrySelector, and rangeShift fields are valid.
        /// </summary>
        internal static string kern_P_Format0_SearchFields {
            get {
                return ResourceManager.GetString("kern_P_Format0_SearchFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1607: All the kerning values in the format 0 subtable are in a valid range.
        /// </summary>
        internal static string kern_P_Format0_Values {
            get {
                return ResourceManager.GetString("kern_P_Format0_Values", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1601: The number of subtables is not 0.
        /// </summary>
        internal static string kern_P_NumSubTables {
            get {
                return ResourceManager.GetString("kern_P_NumSubTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1602: All subtables had their reserved coverage bits set to 0.
        /// </summary>
        internal static string kern_P_ReservedCoverageBits {
            get {
                return ResourceManager.GetString("kern_P_ReservedCoverageBits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1603: The subtable formats were all 0 or 2.
        /// </summary>
        internal static string kern_P_SubtableFormats {
            get {
                return ResourceManager.GetString("kern_P_SubtableFormats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1604: All subtable&apos;s lengths match the calculated lengths.
        /// </summary>
        internal static string kern_P_SubtableLengths {
            get {
                return ResourceManager.GetString("kern_P_SubtableLengths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1605: The table version was 0.
        /// </summary>
        internal static string kern_P_TableVersion {
            get {
                return ResourceManager.GetString("kern_P_TableVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1600: The subtable&apos;s searchRange, entrySelector, and rangeShift fields cannot be validated.
        /// </summary>
        internal static string kern_W_Format0_SearchFields {
            get {
                return ResourceManager.GetString("kern_W_Format0_SearchFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1700: Incorrect format of loca.
        /// </summary>
        internal static string loca_E_Format {
            get {
                return ResourceManager.GetString("loca_E_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1701: The number of entries is not equal (maxp.numGlyphs + 1).
        /// </summary>
        internal static string loca_E_NumEntries {
            get {
                return ResourceManager.GetString("loca_E_NumEntries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1702: The entries are not sorted in ascending order.
        /// </summary>
        internal static string loca_E_OffsetsIncreasing {
            get {
                return ResourceManager.GetString("loca_E_OffsetsIncreasing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1703: Loca entry points outside the glyf range.
        /// </summary>
        internal static string loca_E_OffsetWithinGlyfRange {
            get {
                return ResourceManager.GetString("loca_E_OffsetWithinGlyfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I1700: Loca references a zero-length entry in the glyf table.
        /// </summary>
        internal static string loca_I_GlyfEntryEmpty {
            get {
                return ResourceManager.GetString("loca_I_GlyfEntryEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1700: Correct format of loca (0 or 1).
        /// </summary>
        internal static string loca_P_Format {
            get {
                return ResourceManager.GetString("loca_P_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1701: Loca does not contain references to zero-length entries in glyf table.
        /// </summary>
        internal static string loca_P_GlyfEntryEmpty {
            get {
                return ResourceManager.GetString("loca_P_GlyfEntryEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1702: Loca references a glyf entry which length is not a multiple of 4.
        /// </summary>
        internal static string loca_P_GlyfEntryLengthAlignment {
            get {
                return ResourceManager.GetString("loca_P_GlyfEntryLengthAlignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1703: All glyphs in the glyf table are referenced by the loca table.
        /// </summary>
        internal static string loca_P_GlyfPartiallyUnreferenced {
            get {
                return ResourceManager.GetString("loca_P_GlyfPartiallyUnreferenced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1704: The number of entries is equal to (maxp.numGlyphs + 1).
        /// </summary>
        internal static string loca_P_NumEntries {
            get {
                return ResourceManager.GetString("loca_P_NumEntries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1705: The entries are sorted in ascending order.
        /// </summary>
        internal static string loca_P_OffsetsIncreasing {
            get {
                return ResourceManager.GetString("loca_P_OffsetsIncreasing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1706: All entries point within range of the glyf table.
        /// </summary>
        internal static string loca_P_OffsetWithinGlyfRange {
            get {
                return ResourceManager.GetString("loca_P_OffsetWithinGlyfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1703: Loca references a zero-length entry in the glyf table.
        /// </summary>
        internal static string loca_W_GlyfEntryEmpty {
            get {
                return ResourceManager.GetString("loca_W_GlyfEntryEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1701: Loca references a glyf entry which length is not a multiple of 4.
        /// </summary>
        internal static string loca_W_GlyfEntryLengthAlignment {
            get {
                return ResourceManager.GetString("loca_W_GlyfEntryLengthAlignment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1702: Glyf table is partially unreferenced by loca table.
        /// </summary>
        internal static string loca_W_GlyfPartiallyUnreferenced {
            get {
                return ResourceManager.GetString("loca_W_GlyfPartiallyUnreferenced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1800: The numGlyphs field does not equal maxp.numGlyphs.
        /// </summary>
        internal static string LTSH_E_numGlyphs {
            get {
                return ResourceManager.GetString("LTSH_E_numGlyphs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1801: The LTSH yPel values can&apos;t be validated due to an error while rasterizing the glyphs, likely a hinting instruction error.
        /// </summary>
        internal static string LTSH_E_Rasterizer {
            get {
                return ResourceManager.GetString("LTSH_E_Rasterizer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1802: The calculated table length does not match the actual table length.
        /// </summary>
        internal static string LTSH_E_TableLength {
            get {
                return ResourceManager.GetString("LTSH_E_TableLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1803: The version number is not 0.
        /// </summary>
        internal static string LTSH_E_version {
            get {
                return ResourceManager.GetString("LTSH_E_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1804: The LTSH yPel value doesn&apos;t match the calculated value.
        /// </summary>
        internal static string LTSH_E_yPels {
            get {
                return ResourceManager.GetString("LTSH_E_yPels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1800: The numGlyphs field equals maxp.numGlyphs.
        /// </summary>
        internal static string LTSH_P_numGlyphs {
            get {
                return ResourceManager.GetString("LTSH_P_numGlyphs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1801: The calculated table length matches the actual table length.
        /// </summary>
        internal static string LTSH_P_TableLength {
            get {
                return ResourceManager.GetString("LTSH_P_TableLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1802: The version number is 0.
        /// </summary>
        internal static string LTSH_P_version {
            get {
                return ResourceManager.GetString("LTSH_P_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1803: All LTSH yPel values match the calculated values.
        /// </summary>
        internal static string LTSH_P_yPels {
            get {
                return ResourceManager.GetString("LTSH_P_yPels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1801: The Freetype version is too old.
        /// </summary>
        internal static string LTSH_W_Need_Newer_FreeType {
            get {
                return ResourceManager.GetString("LTSH_W_Need_Newer_FreeType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1800: The LTSH yPel value is zero.
        /// </summary>
        internal static string LTSH_W_yPels_zero {
            get {
                return ResourceManager.GetString("LTSH_W_yPels_zero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1900: The value doesn&apos;t match the calculated value.
        /// </summary>
        internal static string maxp_E_Calculation {
            get {
                return ResourceManager.GetString("maxp_E_Calculation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1901: Table version is 0x00005000 but the table is not 6 bytes long.
        /// </summary>
        internal static string maxp_E_LENGTH_0_5 {
            get {
                return ResourceManager.GetString("maxp_E_LENGTH_0_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1902: Table version is 1.0 but the table is not 32 bytes long.
        /// </summary>
        internal static string maxp_E_LENGTH_1_0 {
            get {
                return ResourceManager.GetString("maxp_E_LENGTH_1_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1903: The numGlyphs value doesn&apos;t match the number of entries in the loca array.
        /// </summary>
        internal static string maxp_E_NumGlyphsMatchLoca {
            get {
                return ResourceManager.GetString("maxp_E_NumGlyphsMatchLoca", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1904: Table version is 0x00005000 but font contains a glyf table.
        /// </summary>
        internal static string maxp_E_VERSION_0_5_glyf {
            get {
                return ResourceManager.GetString("maxp_E_VERSION_0_5_glyf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1905: Table version is 0x00005000 but font does not contain the required CFF table.
        /// </summary>
        internal static string maxp_E_VERSION_0_5_NOCFF {
            get {
                return ResourceManager.GetString("maxp_E_VERSION_0_5_NOCFF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1906: Table version is 1.0 but font contains a CFF table.
        /// </summary>
        internal static string maxp_E_VERSION_1_0_CFF {
            get {
                return ResourceManager.GetString("maxp_E_VERSION_1_0_CFF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1907: Table version is 1.0 but font does not contain the required glyf table.
        /// </summary>
        internal static string maxp_E_VERSION_1_0_NOglyf {
            get {
                return ResourceManager.GetString("maxp_E_VERSION_1_0_NOglyf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E1908: Table version must be either 0x00005000 or 0x00010000.
        /// </summary>
        internal static string maxp_E_VERSION_INVALID {
            get {
                return ResourceManager.GetString("maxp_E_VERSION_INVALID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I1900: maxSizeOfInstructions via method #1.
        /// </summary>
        internal static string maxp_I_Calculation_Method1 {
            get {
                return ResourceManager.GetString("maxp_I_Calculation_Method1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I1901: maxSizeOfInstructions via method #2.
        /// </summary>
        internal static string maxp_I_Calculation_Method2 {
            get {
                return ResourceManager.GetString("maxp_I_Calculation_Method2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1900: The points, contours, and component values match the calculated values.
        /// </summary>
        internal static string maxp_P_Calculation {
            get {
                return ResourceManager.GetString("maxp_P_Calculation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1901: Table version is 0x00005000 and the table is 6 bytes long.
        /// </summary>
        internal static string maxp_P_LENGTH_0_5 {
            get {
                return ResourceManager.GetString("maxp_P_LENGTH_0_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1902: Table version is 1.0 and the table is 32 bytes long.
        /// </summary>
        internal static string maxp_P_LENGTH_1_0 {
            get {
                return ResourceManager.GetString("maxp_P_LENGTH_1_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1903: The numGlyphs value equals the number of entries in the loca array plus one.
        /// </summary>
        internal static string maxp_P_NumGlyphsMatchLoca {
            get {
                return ResourceManager.GetString("maxp_P_NumGlyphsMatchLoca", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1904: Table version is 0x00005000, CFF table is present, no glyf table is present.
        /// </summary>
        internal static string maxp_P_VERSION_0_5 {
            get {
                return ResourceManager.GetString("maxp_P_VERSION_0_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P1905: Table version is 1.0 and a glyf table is present and no CFF table is present.
        /// </summary>
        internal static string maxp_P_VERSION_1_0 {
            get {
                return ResourceManager.GetString("maxp_P_VERSION_1_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W1900: maxSizeOfInstructions computation not via either approved method.
        /// </summary>
        internal static string maxp_W_Calculation_Unclear {
            get {
                return ResourceManager.GetString("maxp_W_Calculation_Unclear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2000: The format selector field is not 0.
        /// </summary>
        internal static string name_E_FormatSelector {
            get {
                return ResourceManager.GetString("name_E_FormatSelector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2001: The Language ID is not valid.
        /// </summary>
        internal static string name_E_MSLanguageID {
            get {
                return ResourceManager.GetString("name_E_MSLanguageID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2002: The NameRecords array is not in sorted order.
        /// </summary>
        internal static string name_E_NameRecordsSorted {
            get {
                return ResourceManager.GetString("name_E_NameRecordsSorted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E0340: A name record specifies using the Unicode Variation Sequences cmap subtable (Format 14).
        /// </summary>
        internal static string name_E_NoFormat14 {
            get {
                return ResourceManager.GetString("name_E_NoFormat14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2003: The table doesn&apos;t contain strings for Mac platform.
        /// </summary>
        internal static string name_E_NoMacPlatform {
            get {
                return ResourceManager.GetString("name_E_NoMacPlatform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2004: The table doesn&apos;t contain strings for Microsoft platform.
        /// </summary>
        internal static string name_E_NoMSPlatform {
            get {
                return ResourceManager.GetString("name_E_NoMSPlatform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2005: The Platform Specific Encoding ID is out of range.
        /// </summary>
        internal static string name_E_PlatformSpecificEncoding {
            get {
                return ResourceManager.GetString("name_E_PlatformSpecificEncoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2006: The PostScript string contains an illegal character.
        /// </summary>
        internal static string name_E_Postscript_chars {
            get {
                return ResourceManager.GetString("name_E_Postscript_chars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2007: The PostScript string is longer than 63 characters.
        /// </summary>
        internal static string name_E_Postscript_length {
            get {
                return ResourceManager.GetString("name_E_Postscript_length", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2008: The PostScript string is not present for both required platforms.
        /// </summary>
        internal static string name_E_Postscript_missing {
            get {
                return ResourceManager.GetString("name_E_Postscript_missing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2009: The Mac PostScript string does not match the Microsoft PostScript string.
        /// </summary>
        internal static string name_E_Postscript_unequal {
            get {
                return ResourceManager.GetString("name_E_Postscript_unequal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2010: A name record is using a reserved Name ID.
        /// </summary>
        internal static string name_E_ReservedNameID {
            get {
                return ResourceManager.GetString("name_E_ReservedNameID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2015: The sample string contains a character that is not mapped in the font.
        /// </summary>
        internal static string name_E_sample {
            get {
                return ResourceManager.GetString("name_E_sample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2011: A string extends past the end of the table.
        /// </summary>
        internal static string name_E_StringsWithinTable {
            get {
                return ResourceManager.GetString("name_E_StringsWithinTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2012: The length of the unicode string is not an even # of bytes.
        /// </summary>
        internal static string name_E_UnicodeLength {
            get {
                return ResourceManager.GetString("name_E_UnicodeLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2013: The version string is not formatted correctly.
        /// </summary>
        internal static string name_E_VersionStringFormat {
            get {
                return ResourceManager.GetString("name_E_VersionStringFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2014: No Microsoft unicode version strings were found.
        /// </summary>
        internal static string name_E_VersionStringNotFound {
            get {
                return ResourceManager.GetString("name_E_VersionStringNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I2002: No string for Typographic Family name (Name ID 16).
        /// </summary>
        internal static string name_I_Preferred_family_not_present {
            get {
                return ResourceManager.GetString("name_I_Preferred_family_not_present", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I2001: Found Typographic Family name (Name ID 16).
        /// </summary>
        internal static string name_I_Preferred_family_present {
            get {
                return ResourceManager.GetString("name_I_Preferred_family_present", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I2004: No string for Typographic Subfamily name (Name ID 17).
        /// </summary>
        internal static string name_I_Preferred_subfamily_not_present {
            get {
                return ResourceManager.GetString("name_I_Preferred_subfamily_not_present", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I2003: Found Typographic Subfamily name (Name ID 17).
        /// </summary>
        internal static string name_I_Preferred_subfamily_present {
            get {
                return ResourceManager.GetString("name_I_Preferred_subfamily_present", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2000: The table contains strings for both Mac and Microsoft platforms.
        /// </summary>
        internal static string name_P_BothPlatforms {
            get {
                return ResourceManager.GetString("name_P_BothPlatforms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2012: No inconsistencies were found for Copyright strings.
        /// </summary>
        internal static string name_P_CopyrightConsistent {
            get {
                return ResourceManager.GetString("name_P_CopyrightConsistent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2013: No inconsistencies were found for Description strings.
        /// </summary>
        internal static string name_P_DescriptionConsistent {
            get {
                return ResourceManager.GetString("name_P_DescriptionConsistent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2001: The format selector field is 0.
        /// </summary>
        internal static string name_P_FormatSelector {
            get {
                return ResourceManager.GetString("name_P_FormatSelector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2002: All Microsoft unicode strings had valid Language IDs.
        /// </summary>
        internal static string name_P_MSLanguageID {
            get {
                return ResourceManager.GetString("name_P_MSLanguageID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2003: The NameRecords array is in sorted order.
        /// </summary>
        internal static string name_P_NameRecordsSorted {
            get {
                return ResourceManager.GetString("name_P_NameRecordsSorted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2015: No name record specified Unicode Variation Sequences cmap subtable.
        /// </summary>
        internal static string name_P_NoFormat14 {
            get {
                return ResourceManager.GetString("name_P_NoFormat14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2004: All strings had valid Platform Specific Encoding IDs.
        /// </summary>
        internal static string name_P_PlatformSpecificEncoding {
            get {
                return ResourceManager.GetString("name_P_PlatformSpecificEncoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2005: The PostScript strings are correctly formatted.
        /// </summary>
        internal static string name_P_Postscript {
            get {
                return ResourceManager.GetString("name_P_Postscript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2006: No name records are using reserved Name IDs.
        /// </summary>
        internal static string name_P_ReservedNameID {
            get {
                return ResourceManager.GetString("name_P_ReservedNameID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2011: The sample string is composed of characters that are mapped in the font.
        /// </summary>
        internal static string name_P_sample {
            get {
                return ResourceManager.GetString("name_P_sample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2007: No strings extended past the end of the table.
        /// </summary>
        internal static string name_P_StringsWithinTable {
            get {
                return ResourceManager.GetString("name_P_StringsWithinTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2010: The subfamily string is consistent with the style of the font.
        /// </summary>
        internal static string name_P_subfamily {
            get {
                return ResourceManager.GetString("name_P_subfamily", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2014: No inconsistencies were found for Trademark strings.
        /// </summary>
        internal static string name_P_TrademarkConsistent {
            get {
                return ResourceManager.GetString("name_P_TrademarkConsistent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2008: The length of every unicode string is an even # of bytes.
        /// </summary>
        internal static string name_P_UnicodeLength {
            get {
                return ResourceManager.GetString("name_P_UnicodeLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2009: The version string is in the correct format.
        /// </summary>
        internal static string name_P_VersionStringFormat {
            get {
                return ResourceManager.GetString("name_P_VersionStringFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2003: The copyright strings are inconsistent.
        /// </summary>
        internal static string name_W_CopyrightInconsistent {
            get {
                return ResourceManager.GetString("name_W_CopyrightInconsistent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2004: The description strings are inconsistent.
        /// </summary>
        internal static string name_W_DescriptionInconsistent {
            get {
                return ResourceManager.GetString("name_W_DescriptionInconsistent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2006: Name ID 1 to 6 are often needed to be installable..
        /// </summary>
        internal static string name_W_ID_1to6_Required_For_Common_OSes {
            get {
                return ResourceManager.GetString("name_W_ID_1to6_Required_For_Common_OSes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2000: The subfamily string is inconsistent with the style of the font.
        /// </summary>
        internal static string name_W_subfamily_style {
            get {
                return ResourceManager.GetString("name_W_subfamily_style", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2005: The trademark strings are inconsistent.
        /// </summary>
        internal static string name_W_TrademarkInconsistent {
            get {
                return ResourceManager.GetString("name_W_TrademarkInconsistent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2002: The 3,1 version string doesn&apos;t match the 3,10 version string.
        /// </summary>
        internal static string name_W_VersionMismatch_3_1_3_10 {
            get {
                return ResourceManager.GetString("name_W_VersionMismatch_3_1_3_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2001: The MS version string doesn&apos;t match the Mac version string.
        /// </summary>
        internal static string name_W_VersionMismatch_MS_MAC {
            get {
                return ResourceManager.GetString("name_W_VersionMismatch_MS_MAC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A2100: A range in the ulCodePageRange field cannot be validated because a code page is not installed.
        /// </summary>
        internal static string OS_2_A_CodePageNotInstalled {
            get {
                return ResourceManager.GetString("OS_2_A_CodePageNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2143: The fsSelection bold bit is inconsistent with the macStyle bold bit.
        /// </summary>
        internal static string OS_2_E_fsSelection_macStyle_bold {
            get {
                return ResourceManager.GetString("OS_2_E_fsSelection_macStyle_bold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2144: The fsSelection italic bit is inconsistent with the macStyle italic bit.
        /// </summary>
        internal static string OS_2_E_fsSelection_macStyle_italic {
            get {
                return ResourceManager.GetString("OS_2_E_fsSelection_macStyle_italic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2100: A bit in the fsSelection field doesn&apos;t match the name table&apos;s font subfamily string.
        /// </summary>
        internal static string OS_2_E_fsSelection_subfamily {
            get {
                return ResourceManager.GetString("OS_2_E_fsSelection_subfamily", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2101: There are undefined bits set in fsSelection field.
        /// </summary>
        internal static string OS_2_E_fsSelection_undefbits {
            get {
                return ResourceManager.GetString("OS_2_E_fsSelection_undefbits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2147: The fsType field has mutually exclusive bits set.
        /// </summary>
        internal static string OS_2_E_fsTypeExclusiveBits {
            get {
                return ResourceManager.GetString("OS_2_E_fsTypeExclusiveBits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2102: The fsType field contains reserved bits that are not zero.
        /// </summary>
        internal static string OS_2_E_fsTypeReserved {
            get {
                return ResourceManager.GetString("OS_2_E_fsTypeReserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2103: PANOSE(tm) byte 7, ArmStyle &gt; 11.
        /// </summary>
        internal static string OS_2_E_Panose_bArmStyle {
            get {
                return ResourceManager.GetString("OS_2_E_Panose_bArmStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2104: PANOSE(tm) byte 5, Contrast &gt; 9.
        /// </summary>
        internal static string OS_2_E_Panose_bContrast {
            get {
                return ResourceManager.GetString("OS_2_E_Panose_bContrast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2105: PANOSE(tm) byte 1, FamilyType &gt; 5.
        /// </summary>
        internal static string OS_2_E_Panose_bFamilyType {
            get {
                return ResourceManager.GetString("OS_2_E_Panose_bFamilyType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2106: PANOSE(tm) byte 8, Letterform &gt; 15.
        /// </summary>
        internal static string OS_2_E_Panose_bLetterform {
            get {
                return ResourceManager.GetString("OS_2_E_Panose_bLetterform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2107: PANOSE(tm) byte 9, Midline &gt; 13.
        /// </summary>
        internal static string OS_2_E_Panose_bMidline {
            get {
                return ResourceManager.GetString("OS_2_E_Panose_bMidline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2108: PANOSE(tm) byte 4, Proportion &gt; 9.
        /// </summary>
        internal static string OS_2_E_Panose_bProportion {
            get {
                return ResourceManager.GetString("OS_2_E_Panose_bProportion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2109: PANOSE(tm) byte 2, SerifStyle &gt; 15.
        /// </summary>
        internal static string OS_2_E_Panose_bSerifStyle {
            get {
                return ResourceManager.GetString("OS_2_E_Panose_bSerifStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2110: PANOSE(tm) byte 6, StrokeVariation &gt; 10.
        /// </summary>
        internal static string OS_2_E_Panose_bStrokeVariation {
            get {
                return ResourceManager.GetString("OS_2_E_Panose_bStrokeVariation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2111: PANOSE(tm) byte 3, Weight &gt; 11.
        /// </summary>
        internal static string OS_2_E_Panose_bWeight {
            get {
                return ResourceManager.GetString("OS_2_E_Panose_bWeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2112: PANOSE(tm) byte 10, XHeight &gt; 7.
        /// </summary>
        internal static string OS_2_E_Panose_bXHeight {
            get {
                return ResourceManager.GetString("OS_2_E_Panose_bXHeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2139: Font is a symbol font, but PANOSE(tm) byte 1, FamilyType, is not set to Latin Symbol.
        /// </summary>
        internal static string OS_2_E_Panose_FamilyTypeNotSymbol {
            get {
                return ResourceManager.GetString("OS_2_E_Panose_FamilyTypeNotSymbol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2140: Font is a not a symbol font, but PANOSE(tm) byte 1, FamilyType, is set to Latin Symbol.
        /// </summary>
        internal static string OS_2_E_Panose_FamilyTypeSymbol {
            get {
                return ResourceManager.GetString("OS_2_E_Panose_FamilyTypeSymbol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2141: PANOSE family kind is Latin Symbol, but byte 5, Aspect Ratio and Contrast, does not equal 1.
        /// </summary>
        internal static string OS_2_E_Panose_SymbolAspectRatio {
            get {
                return ResourceManager.GetString("OS_2_E_Panose_SymbolAspectRatio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2142: PANOSE family kind is Latin Symbol, but byte 3, Weight, does not equal 1.
        /// </summary>
        internal static string OS_2_E_Panose_SymbolWeight {
            get {
                return ResourceManager.GetString("OS_2_E_Panose_SymbolWeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2113: A unicode range was indicated in ulUnicodeRange, but the font has no characters in that range.
        /// </summary>
        internal static string OS_2_E_RangeBitSet {
            get {
                return ResourceManager.GetString("OS_2_E_RangeBitSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2114: The fsSelection field has both the Regular and Bold bits set.
        /// </summary>
        internal static string OS_2_E_reg_bold {
            get {
                return ResourceManager.GetString("OS_2_E_reg_bold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2115: The fsSelection field has both the Regular and Italic bits set.
        /// </summary>
        internal static string OS_2_E_reg_ital {
            get {
                return ResourceManager.GetString("OS_2_E_reg_ital", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2116: A reserved bit is set in a ulCodePageRange field.
        /// </summary>
        internal static string OS_2_E_ReservedBitSet_CodePage {
            get {
                return ResourceManager.GetString("OS_2_E_ReservedBitSet_CodePage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2117: A reserved bit is set in a ulUnicodeRange field.
        /// </summary>
        internal static string OS_2_E_ReservedBitSet_Unicode {
            get {
                return ResourceManager.GetString("OS_2_E_ReservedBitSet_Unicode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2118: The sCapHeight field is zero, but the U+0048 character is mapped to a glyf.
        /// </summary>
        internal static string OS_2_E_sCapHeight {
            get {
                return ResourceManager.GetString("OS_2_E_sCapHeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2119: sFamilyClass class ID is reserved.
        /// </summary>
        internal static string OS_2_E_sFamilyClass_classID_reserved {
            get {
                return ResourceManager.GetString("OS_2_E_sFamilyClass_classID_reserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2120: sFamilyClass class ID is undefined.
        /// </summary>
        internal static string OS_2_E_sFamilyClass_ClassID_undefined {
            get {
                return ResourceManager.GetString("OS_2_E_sFamilyClass_ClassID_undefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2121: sFamilyClass subclass ID is undefined.
        /// </summary>
        internal static string OS_2_E_sFamilyClass_subclassID_undefined {
            get {
                return ResourceManager.GetString("OS_2_E_sFamilyClass_subclassID_undefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2145: The sTypoAscender value is less than or equal to zero.
        /// </summary>
        internal static string OS_2_E_sTypoAscender_notpositive {
            get {
                return ResourceManager.GetString("OS_2_E_sTypoAscender_notpositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2146: The sTypoDescender value is greater than zero.
        /// </summary>
        internal static string OS_2_E_sTypoDescender_positive {
            get {
                return ResourceManager.GetString("OS_2_E_sTypoDescender_positive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2122: The surrogates bit (bit #57) is clear in the ulUnicodeRange, but the cmap contains a surrogates encoding.
        /// </summary>
        internal static string OS_2_E_SurrogatesBitClear {
            get {
                return ResourceManager.GetString("OS_2_E_SurrogatesBitClear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2123: The surrogates bit (bit #57) is set in the ulUnicodeRange, but the cmap doesn&apos;t contain a surrogates encoding.
        /// </summary>
        internal static string OS_2_E_SurrogatesBitSet {
            get {
                return ResourceManager.GetString("OS_2_E_SurrogatesBitSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2124: The sxHeight field is zero, but the U+0078 character is mapped to a glyf.
        /// </summary>
        internal static string OS_2_E_sxHeight {
            get {
                return ResourceManager.GetString("OS_2_E_sxHeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2125: The font contains a 3,0 cmap, but the CodePageRange bit #31 (symbol character set) is clear.
        /// </summary>
        internal static string OS_2_E_SymbolBitClear {
            get {
                return ResourceManager.GetString("OS_2_E_SymbolBitClear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2126: The font doesn&apos;t contain a 3,0 cmap and doesn&apos;t contain characters mapped to the 0xf000-0xf0ff range, but the CodePageRange bit #31 (symbol character set) is set.
        /// </summary>
        internal static string OS_2_E_SymbolBitSet {
            get {
                return ResourceManager.GetString("OS_2_E_SymbolBitSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2127: The table length does not match the expected length for this version.
        /// </summary>
        internal static string OS_2_E_TableLength {
            get {
                return ResourceManager.GetString("OS_2_E_TableLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2128: The usBreakChar is not mapped to a glyf.
        /// </summary>
        internal static string OS_2_E_usBreakChar_notmapped {
            get {
                return ResourceManager.GetString("OS_2_E_usBreakChar_notmapped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2129: The usDefaultChar field is nonzero, but the character is not mapped to a glyf.
        /// </summary>
        internal static string OS_2_E_usDefaultChar_notmapped {
            get {
                return ResourceManager.GetString("OS_2_E_usDefaultChar_notmapped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2130: The usFirstCharIndex is not valid.
        /// </summary>
        internal static string OS_2_E_usFirstCharIndex {
            get {
                return ResourceManager.GetString("OS_2_E_usFirstCharIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2131: The usLastCharIndex is not valid.
        /// </summary>
        internal static string OS_2_E_usLastCharIndex {
            get {
                return ResourceManager.GetString("OS_2_E_usLastCharIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2148: The usMaxContext field doesn&apos;t match the calculated value.
        /// </summary>
        internal static string OS_2_E_usMaxContext {
            get {
                return ResourceManager.GetString("OS_2_E_usMaxContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2132: The version number is invalid.
        /// </summary>
        internal static string OS_2_E_Version {
            get {
                return ResourceManager.GetString("OS_2_E_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2133: The usWeightClass is not a valid value.
        /// </summary>
        internal static string OS_2_E_WeightClass {
            get {
                return ResourceManager.GetString("OS_2_E_WeightClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2134: The width class is not a valid value.
        /// </summary>
        internal static string OS_2_E_WidthClass {
            get {
                return ResourceManager.GetString("OS_2_E_WidthClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2135: The xAvgCharWidth field does not equal the calculated value.
        /// </summary>
        internal static string OS_2_E_xAvgCharWidth {
            get {
                return ResourceManager.GetString("OS_2_E_xAvgCharWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I2100: Characters in a unicode range are present in the font, but not indicated in ulUnicodeRange fields.
        /// </summary>
        internal static string OS_2_I_RangeBitNotSet {
            get {
                return ResourceManager.GetString("OS_2_I_RangeBitNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I2131: The usLastCharIndex is 0xFFFF and a (3.10) cmap is present.
        /// </summary>
        internal static string OS_2_I_usLastCharIndex {
            get {
                return ResourceManager.GetString("OS_2_I_usLastCharIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2100: The usFirstCharIndex and usLastCharIndex fields are valid.
        /// </summary>
        internal static string OS_2_P_CharIndexes {
            get {
                return ResourceManager.GetString("OS_2_P_CharIndexes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2101: The CodePage Range fields&apos; bits are all allowable values.
        /// </summary>
        internal static string OS_2_P_CodePageRanges {
            get {
                return ResourceManager.GetString("OS_2_P_CodePageRanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2102: The fsSelection field appears to be valid.
        /// </summary>
        internal static string OS_2_P_fsSelection {
            get {
                return ResourceManager.GetString("OS_2_P_fsSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2103: The fsType field is valid.
        /// </summary>
        internal static string OS_2_P_fsType {
            get {
                return ResourceManager.GetString("OS_2_P_fsType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2104: All panose values are in a valid range.
        /// </summary>
        internal static string OS_2_P_Panose {
            get {
                return ResourceManager.GetString("OS_2_P_Panose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2105: The sCapHeight field is nonzero.
        /// </summary>
        internal static string OS_2_P_sCapHeight_nonzero {
            get {
                return ResourceManager.GetString("OS_2_P_sCapHeight_nonzero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2106: The sCapHeight field is zero, and U+0048 is not mapped to a glyf.
        /// </summary>
        internal static string OS_2_P_sCapHeight_zero {
            get {
                return ResourceManager.GetString("OS_2_P_sCapHeight_zero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2107: The sFamilyClass Class ID and Subclass ID values are in a valid range.
        /// </summary>
        internal static string OS_2_P_sFamilyClass {
            get {
                return ResourceManager.GetString("OS_2_P_sFamilyClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2108: The yStrikeoutSize and yStrikeoutPosition appear valid.
        /// </summary>
        internal static string OS_2_P_Strikeout {
            get {
                return ResourceManager.GetString("OS_2_P_Strikeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2123: The sTypoAscender and sTypoDescender fields are reasonable values.
        /// </summary>
        internal static string OS_2_P_sTypoAscenderDescender {
            get {
                return ResourceManager.GetString("OS_2_P_sTypoAscenderDescender", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2109: All subscript and superscript values appear valid.
        /// </summary>
        internal static string OS_2_P_SuperscriptSubscript {
            get {
                return ResourceManager.GetString("OS_2_P_SuperscriptSubscript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2110: The sxHeight field is nonzero.
        /// </summary>
        internal static string OS_2_P_sxHeight_nonzero {
            get {
                return ResourceManager.GetString("OS_2_P_sxHeight_nonzero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2111: The sxHeight field is zero, and U+0078 is not mapped to a glyf.
        /// </summary>
        internal static string OS_2_P_sxHeight_zero {
            get {
                return ResourceManager.GetString("OS_2_P_sxHeight_zero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2112: The table length matches the expected length for this version.
        /// </summary>
        internal static string OS_2_P_TableLength {
            get {
                return ResourceManager.GetString("OS_2_P_TableLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2113: The Unicode Range fields&apos; bits are all allowable values.
        /// </summary>
        internal static string OS_2_P_UnicodeRanges {
            get {
                return ResourceManager.GetString("OS_2_P_UnicodeRanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2114: The usBreakChar is mapped to a glyf.
        /// </summary>
        internal static string OS_2_P_usBreakChar_mapped {
            get {
                return ResourceManager.GetString("OS_2_P_usBreakChar_mapped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2115: The usDefaultChar field is nonzero, and the character is mapped to a glyf.
        /// </summary>
        internal static string OS_2_P_usDefaultChar_nonzero {
            get {
                return ResourceManager.GetString("OS_2_P_usDefaultChar_nonzero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2116: The usDefaultChar field is zero.
        /// </summary>
        internal static string OS_2_P_usDefaultChar_zero {
            get {
                return ResourceManager.GetString("OS_2_P_usDefaultChar_zero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2124: The usMaxContext field matches the calculated value.
        /// </summary>
        internal static string OS_2_P_usMaxContext {
            get {
                return ResourceManager.GetString("OS_2_P_usMaxContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2117: The version number is valid and is the current version number.
        /// </summary>
        internal static string OS_2_P_Version {
            get {
                return ResourceManager.GetString("OS_2_P_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2118: The usWeightClass is a valid value.
        /// </summary>
        internal static string OS_2_P_WeightClass {
            get {
                return ResourceManager.GetString("OS_2_P_WeightClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2122: The usWeightClass is consistent with the PANOSE weight value.
        /// </summary>
        internal static string OS_2_P_WeightClass_PANOSE {
            get {
                return ResourceManager.GetString("OS_2_P_WeightClass_PANOSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2119: The width class is a valid value.
        /// </summary>
        internal static string OS_2_P_WidthClass {
            get {
                return ResourceManager.GetString("OS_2_P_WidthClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2120: The xAvgCharWidth field equals the calculated value.
        /// </summary>
        internal static string OS_2_P_xAvgCharWidth {
            get {
                return ResourceManager.GetString("OS_2_P_xAvgCharWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2100: A CodePage bit is clear in ulCodePageRange, but the font contains all of the printable characters from that codepage.
        /// </summary>
        internal static string OS_2_W_CodePageRangeBitClear {
            get {
                return ResourceManager.GetString("OS_2_W_CodePageRangeBitClear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2101: A CodePage bit is set in ulCodePageRange, but the font is missing some of the printable characters from that codepage.
        /// </summary>
        internal static string OS_2_W_CodePageRangeBitSet {
            get {
                return ResourceManager.GetString("OS_2_W_CodePageRangeBitSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2103: The fsSelection bold bit is set, but is inconsistent with the usWeightClass value.
        /// </summary>
        internal static string OS_2_W_fsSelection_weight {
            get {
                return ResourceManager.GetString("OS_2_W_fsSelection_weight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2104: The xAvgCharWidth field can not be validated.
        /// </summary>
        internal static string OS_2_W_hmtx_invalid {
            get {
                return ResourceManager.GetString("OS_2_W_hmtx_invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2105: PANOSE(tm) is undefined. Font mapping may not work properly.
        /// </summary>
        internal static string OS_2_W_Panose_undefined {
            get {
                return ResourceManager.GetString("OS_2_W_Panose_undefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2117: The value of sTypoAscender minus sTypoDescender is greater than unitsPerEm.
        /// </summary>
        internal static string OS_2_W_sTypoAscenderDescender_difference {
            get {
                return ResourceManager.GetString("OS_2_W_sTypoAscenderDescender_difference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2106: The version number is valid, but less than 5.
        /// </summary>
        internal static string OS_2_W_Version_old {
            get {
                return ResourceManager.GetString("OS_2_W_Version_old", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2116: The usWeightClass is inconsistent with the PANOSE weight value.
        /// </summary>
        internal static string OS_2_W_WeightClass_PANOSE {
            get {
                return ResourceManager.GetString("OS_2_W_WeightClass_PANOSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2107: yStrikeoutPosition has unlikely value.
        /// </summary>
        internal static string OS_2_W_yStrikeoutPosition_unlikely {
            get {
                return ResourceManager.GetString("OS_2_W_yStrikeoutPosition_unlikely", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2108: yStrikeoutSize has unlikely value.
        /// </summary>
        internal static string OS_2_W_yStrikeoutSize_unlikely {
            get {
                return ResourceManager.GetString("OS_2_W_yStrikeoutSize_unlikely", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2109: ySubscriptXSize has unlikely value.
        /// </summary>
        internal static string OS_2_W_ySubscriptXSize_unlikely {
            get {
                return ResourceManager.GetString("OS_2_W_ySubscriptXSize_unlikely", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2110: ySubscriptYOffset is less than zero which is an unlikely value.
        /// </summary>
        internal static string OS_2_W_ySubscriptYOffset_LTZero {
            get {
                return ResourceManager.GetString("OS_2_W_ySubscriptYOffset_LTZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2111: ySubscriptYSize has unlikely value.
        /// </summary>
        internal static string OS_2_W_ySubscriptYSize_unlikely {
            get {
                return ResourceManager.GetString("OS_2_W_ySubscriptYSize_unlikely", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2112: ySuperscriptXSize has unlikely value.
        /// </summary>
        internal static string OS_2_W_ySuperscriptXSize_unlikely {
            get {
                return ResourceManager.GetString("OS_2_W_ySuperscriptXSize_unlikely", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2113: ySuperscriptYOffset is less than zero which is an unlikely value.
        /// </summary>
        internal static string OS_2_W_ySuperscriptYOffset_unlikely {
            get {
                return ResourceManager.GetString("OS_2_W_ySuperscriptYOffset_unlikely", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2114: ySuperscriptYSize has unlikely value.
        /// </summary>
        internal static string OS_2_W_ySuperscriptYSize_unlikely {
            get {
                return ResourceManager.GetString("OS_2_W_ySuperscriptYSize_unlikely", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2200: The SerifStyle bottom 6 bit value is invalid.
        /// </summary>
        internal static string PCLT_E_Bottom6 {
            get {
                return ResourceManager.GetString("PCLT_E_Bottom6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2201: The Pitch field does not equal the width of the space character.
        /// </summary>
        internal static string PCLT_E_Pitch {
            get {
                return ResourceManager.GetString("PCLT_E_Pitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2202: The Reserved field is not zero.
        /// </summary>
        internal static string PCLT_E_Reserved {
            get {
                return ResourceManager.GetString("PCLT_E_Reserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2203: The StrokeWeight value was not in the range of -7 to 7.
        /// </summary>
        internal static string PCLT_E_StrokeWeight {
            get {
                return ResourceManager.GetString("PCLT_E_StrokeWeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2204: The Style Posture bits have a reserved value of 3.
        /// </summary>
        internal static string PCLT_E_Style_Posture {
            get {
                return ResourceManager.GetString("PCLT_E_Style_Posture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2205: The Style field has non zero bits in the most significant 6 bits.
        /// </summary>
        internal static string PCLT_E_Style_Reserved {
            get {
                return ResourceManager.GetString("PCLT_E_Style_Reserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2206: The Style Structure bits are in the reserved range of 18 to 31.
        /// </summary>
        internal static string PCLT_E_Style_Structure {
            get {
                return ResourceManager.GetString("PCLT_E_Style_Structure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2207: The Style Width bits have a reserved value of 5.
        /// </summary>
        internal static string PCLT_E_Style_Width {
            get {
                return ResourceManager.GetString("PCLT_E_Style_Width", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2208: The table length is not 54 bytes.
        /// </summary>
        internal static string PCLT_E_TableLength {
            get {
                return ResourceManager.GetString("PCLT_E_TableLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2209: The SerifStyle top 2 bit value is invalid.
        /// </summary>
        internal static string PCLT_E_Top2 {
            get {
                return ResourceManager.GetString("PCLT_E_Top2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2210: The version is not 0x00010000.
        /// </summary>
        internal static string PCLT_E_Version {
            get {
                return ResourceManager.GetString("PCLT_E_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2211: The WidthType value was not in the range of -5 to 5.
        /// </summary>
        internal static string PCLT_E_WidthType {
            get {
                return ResourceManager.GetString("PCLT_E_WidthType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2200: The Pitch field equals the width of the space character.
        /// </summary>
        internal static string PCLT_P_Pitch {
            get {
                return ResourceManager.GetString("PCLT_P_Pitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2201: The Reserved field is zero.
        /// </summary>
        internal static string PCLT_P_Reserved {
            get {
                return ResourceManager.GetString("PCLT_P_Reserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2202: The SerifStyle values are in a valid range.
        /// </summary>
        internal static string PCLT_P_SerifStyle {
            get {
                return ResourceManager.GetString("PCLT_P_SerifStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2203: The StrokeWeight value was in the range of -7 to 7.
        /// </summary>
        internal static string PCLT_P_StrokeWeight {
            get {
                return ResourceManager.GetString("PCLT_P_StrokeWeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2204: All reserved bits in the Style field were set to zero.
        /// </summary>
        internal static string PCLT_P_Style {
            get {
                return ResourceManager.GetString("PCLT_P_Style", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2205: The table length is 54 bytes.
        /// </summary>
        internal static string PCLT_P_TableLength {
            get {
                return ResourceManager.GetString("PCLT_P_TableLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2206: The version is 0x00010000.
        /// </summary>
        internal static string PCLT_P_Version {
            get {
                return ResourceManager.GetString("PCLT_P_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2207: The WidthType value was in the range of -5 to 5.
        /// </summary>
        internal static string PCLT_P_WidthType {
            get {
                return ResourceManager.GetString("PCLT_P_WidthType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2300: An entry in the glyphNameIndex - 258 is greater than the number of names.
        /// </summary>
        internal static string post_E_glyphNameIndex_range {
            get {
                return ResourceManager.GetString("post_E_glyphNameIndex_range", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2301: The table length is invalid.
        /// </summary>
        internal static string post_E_InvalidTableLen {
            get {
                return ResourceManager.GetString("post_E_InvalidTableLen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2302: The isFixedPitch field is nonzero, but hmtx shows the font as proportional.
        /// </summary>
        internal static string post_E_isFixedPitchNonzero_hmtx {
            get {
                return ResourceManager.GetString("post_E_isFixedPitchNonzero_hmtx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2303: The isFixedPitch field != 0, but the OS/2 panose bProportion is not monospace.
        /// </summary>
        internal static string post_E_isFixedPitchNonzero_OS_2 {
            get {
                return ResourceManager.GetString("post_E_isFixedPitchNonzero_OS_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2304: The isFixedPitch field is zero, but hmtx shows the font as fixed pitch.
        /// </summary>
        internal static string post_E_isFixedPitchZero_hmtx {
            get {
                return ResourceManager.GetString("post_E_isFixedPitchZero_hmtx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2305: The isFixedPitch field is zero, but the OS/2 panose bProportion is monospace.
        /// </summary>
        internal static string post_E_isFixedPitchZero_OS_2 {
            get {
                return ResourceManager.GetString("post_E_isFixedPitchZero_OS_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2306: The italicAngle is nonzero, but the hhea.caretSlopeRun is zero.
        /// </summary>
        internal static string post_E_italicAngleNonzero_caretSlopeRun {
            get {
                return ResourceManager.GetString("post_E_italicAngleNonzero_caretSlopeRun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2307: The italicAngle does not match the hhea.caretSlopeRise/hhea.caretSlopeRun angle.
        /// </summary>
        internal static string post_E_italicAngleNonzero_hheaAngle {
            get {
                return ResourceManager.GetString("post_E_italicAngleNonzero_hheaAngle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2308: The italicAngle is nonzero, but the head.macStyle italic bit is not set.
        /// </summary>
        internal static string post_E_italicAngleNonzero_macStyle {
            get {
                return ResourceManager.GetString("post_E_italicAngleNonzero_macStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2309: The italicAngle is zero, but the hhea.caretSlopeRun is not zero.
        /// </summary>
        internal static string post_E_italicAngleZero_caretSlopeRun {
            get {
                return ResourceManager.GetString("post_E_italicAngleZero_caretSlopeRun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2310: The italicAngle is zero, but the head.macStyle italic bit is set.
        /// </summary>
        internal static string post_E_italicAngleZero_macStyle {
            get {
                return ResourceManager.GetString("post_E_italicAngleZero_macStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2311: The table length is not 32 bytes long.
        /// </summary>
        internal static string post_E_TableLenNot32 {
            get {
                return ResourceManager.GetString("post_E_TableLenNot32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2312: The post name extends past the end of the table.
        /// </summary>
        internal static string post_E_v2_NameLengthInvalid {
            get {
                return ResourceManager.GetString("post_E_v2_NameLengthInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2313: The offset to the post name is invalid.
        /// </summary>
        internal static string post_E_v2_NameOffsetInvalid {
            get {
                return ResourceManager.GetString("post_E_v2_NameOffsetInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2314: The numberOfGlyphs field does not equal maxp.numGlyphs.
        /// </summary>
        internal static string post_E_v2_numberOfGlyphs {
            get {
                return ResourceManager.GetString("post_E_v2_numberOfGlyphs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2315: The version number is invalid.
        /// </summary>
        internal static string post_E_Version {
            get {
                return ResourceManager.GetString("post_E_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I2300: The post name isn&apos;t in uniXXXX or uXXXXX format and there is no Adobe Glyph List entry.
        /// </summary>
        internal static string post_I_names_noAdobe {
            get {
                return ResourceManager.GetString("post_I_names_noAdobe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I2301: The post name does not match the name in the Adobe Glyph List.
        /// </summary>
        internal static string post_I_names_nomatch {
            get {
                return ResourceManager.GetString("post_I_names_nomatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I2305: The post name has an unexpected value.
        /// </summary>
        internal static string post_I_names_uni_unexpected {
            get {
                return ResourceManager.GetString("post_I_names_uni_unexpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I2302: The glyphNameIndex array was not tested since version != 2.
        /// </summary>
        internal static string post_I_v2_glyphNameIndex_notv2 {
            get {
                return ResourceManager.GetString("post_I_v2_glyphNameIndex_notv2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I2303: The post name was not tested since version != 2.
        /// </summary>
        internal static string post_I_v2_names_notv2 {
            get {
                return ResourceManager.GetString("post_I_v2_names_notv2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I2304: The numberOfGlyphs field was not tested since version != 2.
        /// </summary>
        internal static string post_I_v2_numberOfGlyphs_notv2 {
            get {
                return ResourceManager.GetString("post_I_v2_numberOfGlyphs_notv2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2300: The glyphNameIndex array contains valid indexes.
        /// </summary>
        internal static string post_P_glyphNameIndex {
            get {
                return ResourceManager.GetString("post_P_glyphNameIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2301: The isFixedPitch field is consistent with other table(s).
        /// </summary>
        internal static string post_P_isFixedPitch {
            get {
                return ResourceManager.GetString("post_P_isFixedPitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2302: The italicAngle value is reasonable and consistent with other tables.
        /// </summary>
        internal static string post_P_italicAngle {
            get {
                return ResourceManager.GetString("post_P_italicAngle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2303: The names in the post table are consistent with the Adobe Glyph List names.
        /// </summary>
        internal static string post_P_names {
            get {
                return ResourceManager.GetString("post_P_names", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2304: The table length is valid.
        /// </summary>
        internal static string post_P_TableLength {
            get {
                return ResourceManager.GetString("post_P_TableLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2305: The underlinePosition value is not less than hhea.Descender.
        /// </summary>
        internal static string post_P_underlinePosition {
            get {
                return ResourceManager.GetString("post_P_underlinePosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2306: The underlineThickness value is reasonable.
        /// </summary>
        internal static string post_P_underlineThickness {
            get {
                return ResourceManager.GetString("post_P_underlineThickness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2307: The numberOfGlyphs field equals maxp.numGlyphs.
        /// </summary>
        internal static string post_P_v2_numberOfGlyphs {
            get {
                return ResourceManager.GetString("post_P_v2_numberOfGlyphs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2308: The version number is valid.
        /// </summary>
        internal static string post_P_Version {
            get {
                return ResourceManager.GetString("post_P_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2300: The italicAngle value is unlikely.
        /// </summary>
        internal static string post_W_italicAngle_unlikely {
            get {
                return ResourceManager.GetString("post_W_italicAngle_unlikely", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2301: The underlinePosition value is less than hhea.Descender.
        /// </summary>
        internal static string post_W_underlinePos_LT_descender {
            get {
                return ResourceManager.GetString("post_W_underlinePos_LT_descender", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2302: The underlineThickness value is unlikely.
        /// </summary>
        internal static string post_W_underlineThickness {
            get {
                return ResourceManager.GetString("post_W_underlineThickness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2303: The version number is 0x00025000, which is valid but deprecated.
        /// </summary>
        internal static string post_W_Version_2_5 {
            get {
                return ResourceManager.GetString("post_W_Version_2_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2304: Apple recommends against using post table format 3 under most circumstances.
        /// </summary>
        internal static string post_W_Version_3_Apple {
            get {
                return ResourceManager.GetString("post_W_Version_3_Apple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2305: As a rule, format 4 post tables are no longer necessary and should be avoided..
        /// </summary>
        internal static string post_W_Version_4_Apple {
            get {
                return ResourceManager.GetString("post_W_Version_4_Apple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I2400: Validation for the prep table is not directly implemented, but rasterization testing will validate any executed hinting instructions.
        /// </summary>
        internal static string prep_I_NotValidated {
            get {
                return ResourceManager.GetString("prep_I_NotValidated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E3501: The offsetToSVGDocIndex field is too small.
        /// </summary>
        internal static string SVG_E_offsetToSVGDocIndex_Overlapping {
            get {
                return ResourceManager.GetString("SVG_E_offsetToSVGDocIndex_Overlapping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E3504: The SVGDocIndex field has some fatal errors.
        /// </summary>
        internal static string SVG_E_SVGDocIndex {
            get {
                return ResourceManager.GetString("SVG_E_SVGDocIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E3505: Try loading SVG as XML failed.
        /// </summary>
        internal static string SVG_E_TryLoadSVG {
            get {
                return ResourceManager.GetString("SVG_E_TryLoadSVG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P3503: The numEntries field is okay.
        /// </summary>
        internal static string SVG_P_numEntries {
            get {
                return ResourceManager.GetString("SVG_P_numEntries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P3501: The offsetToSVGDocIndex field is okay.
        /// </summary>
        internal static string SVG_P_offsetToSVGDocIndex {
            get {
                return ResourceManager.GetString("SVG_P_offsetToSVGDocIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P3502: The reserved field is okay.
        /// </summary>
        internal static string SVG_P_reserved {
            get {
                return ResourceManager.GetString("SVG_P_reserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P3504: The SVGDocIndex field is okay.
        /// </summary>
        internal static string SVG_P_SVGDocIndex {
            get {
                return ResourceManager.GetString("SVG_P_SVGDocIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P3505: Try loading SVG as XML is okay.
        /// </summary>
        internal static string SVG_P_TryLoadSVG {
            get {
                return ResourceManager.GetString("SVG_P_TryLoadSVG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P3500: The version field is okay.
        /// </summary>
        internal static string SVG_P_version {
            get {
                return ResourceManager.GetString("SVG_P_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W3503: The numEntries field is wrong.
        /// </summary>
        internal static string SVG_W_numEntries {
            get {
                return ResourceManager.GetString("SVG_W_numEntries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W3501: The offsetToSVGDocIndex field is too large.
        /// </summary>
        internal static string SVG_W_offsetToSVGDocIndex_NonContiguous {
            get {
                return ResourceManager.GetString("SVG_W_offsetToSVGDocIndex_NonContiguous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W3502: The reserved field is wrong.
        /// </summary>
        internal static string SVG_W_reserved {
            get {
                return ResourceManager.GetString("SVG_W_reserved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W3504: The SVGDocIndex field has some non-fatal errors.
        /// </summary>
        internal static string SVG_W_SVGDocIndex {
            get {
                return ResourceManager.GetString("SVG_W_SVGDocIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W3500: The version field is wrong.
        /// </summary>
        internal static string SVG_W_version {
            get {
                return ResourceManager.GetString("SVG_W_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2500: The VDMX data doesn&apos;t match the data calculated by the rasterizer.
        /// </summary>
        internal static string VDMX_E_CalcData {
            get {
                return ResourceManager.GetString("VDMX_E_CalcData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2501: A VDMX group isn&apos;t within the table.
        /// </summary>
        internal static string VDMX_E_GroupsInTable {
            get {
                return ResourceManager.GetString("VDMX_E_GroupsInTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2502: An offset to a VDMX group is invalid.
        /// </summary>
        internal static string VDMX_E_InvalidOffset {
            get {
                return ResourceManager.GetString("VDMX_E_InvalidOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2504: The version number is not 0 or 1.
        /// </summary>
        internal static string VDMX_E_Version {
            get {
                return ResourceManager.GetString("VDMX_E_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2505: The yPelHeight value is greater than 255.
        /// </summary>
        internal static string VDMX_E_yPelHeight_illegal {
            get {
                return ResourceManager.GetString("VDMX_E_yPelHeight_illegal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2500: The VDMX data matches the data calculated by the rasterizer.
        /// </summary>
        internal static string VDMX_P_CalcData {
            get {
                return ResourceManager.GetString("VDMX_P_CalcData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2501: All of the VDMX groups are within the table.
        /// </summary>
        internal static string VDMX_P_GroupsInTable {
            get {
                return ResourceManager.GetString("VDMX_P_GroupsInTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2502: All of the offsets to VDMX groups were in a valid range.
        /// </summary>
        internal static string VDMX_P_Offsets {
            get {
                return ResourceManager.GetString("VDMX_P_Offsets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2503: The version number is valid.
        /// </summary>
        internal static string VDMX_P_Version {
            get {
                return ResourceManager.GetString("VDMX_P_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2500: The VDMX data doesn&apos;t match the data calculated by the rasterizer.
        /// </summary>
        internal static string VDMX_W_CalcData {
            get {
                return ResourceManager.GetString("VDMX_W_CalcData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to W2501: The Freetype version is too old.
        /// </summary>
        internal static string VDMX_W_Need_Newer_FreeType {
            get {
                return ResourceManager.GetString("VDMX_W_Need_Newer_FreeType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2600: The metricDataFormat field is not set to zero.
        /// </summary>
        internal static string vhea_E_metricDataFormat {
            get {
                return ResourceManager.GetString("vhea_E_metricDataFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2601: The reserved fields are not all set to zero.
        /// </summary>
        internal static string vhea_E_ReservedFields {
            get {
                return ResourceManager.GetString("vhea_E_ReservedFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2602: The version is not valid.
        /// </summary>
        internal static string vhea_E_version {
            get {
                return ResourceManager.GetString("vhea_E_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2600: The metricDataFormat field is set to zero.
        /// </summary>
        internal static string vhea_P_metricDataFormat {
            get {
                return ResourceManager.GetString("vhea_P_metricDataFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2601: The reserved fields are all set to zero.
        /// </summary>
        internal static string vhea_P_ReservedFields {
            get {
                return ResourceManager.GetString("vhea_P_ReservedFields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2602: The version is number is valid.
        /// </summary>
        internal static string vhea_P_version {
            get {
                return ResourceManager.GetString("vhea_P_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2700: The table length is incorrect.
        /// </summary>
        internal static string vmtx_E_TableLength {
            get {
                return ResourceManager.GetString("vmtx_E_TableLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2700: The table length is correct.
        /// </summary>
        internal static string vmtx_P_TableLength {
            get {
                return ResourceManager.GetString("vmtx_P_TableLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2800: The font is not a CFF font, and so it should not contain a VORG table.
        /// </summary>
        internal static string VORG_E_CFF_Font {
            get {
                return ResourceManager.GetString("VORG_E_CFF_Font", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E2801: The major.minor version is not 1.0.
        /// </summary>
        internal static string VORG_E_Version {
            get {
                return ResourceManager.GetString("VORG_E_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2800: The font is a CFF font.
        /// </summary>
        internal static string VORG_P_CFF_Font {
            get {
                return ResourceManager.GetString("VORG_P_CFF_Font", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to P2801: The major.minor version is 1.0.
        /// </summary>
        internal static string VORG_P_Version {
            get {
                return ResourceManager.GetString("VORG_P_Version", resourceCulture);
            }
        }
    }
}
